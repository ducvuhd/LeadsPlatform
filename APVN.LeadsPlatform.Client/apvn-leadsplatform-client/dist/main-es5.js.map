{"version":3,"sources":["webpack:///src/app/models/user-index-model.ts","webpack:///src/app/models/ResponseData.ts","webpack:///src/app/models/AdminUserModel.ts","webpack:///src/app/views/user/user-routing.module.ts","webpack:///src/app/views/error/404.component.ts","webpack:///src/app/views/error/404.component.html","webpack:///src/environments/environment.ts","webpack:///src/app/views/user/user-change-password/user-change-password.component.ts","webpack:///src/app/views/user/user-change-password/user-change-password.component.html","webpack:///src/app/views/leadsmanagerment/campaign/campaign.component.ts","webpack:///src/app/views/leadsmanagerment/campaign/campaign.component.html","webpack:///src/app/views/leadsmanagerment/leadsmanagerment-detail/leadsmanagerment-detail.component.ts","webpack:///src/app/views/leadsmanagerment/leadsmanagerment-detail/leadsmanagerment-detail.component.html","webpack:///src/app/containers/default-layout/index.ts","webpack:///src/app/models/leadsmanagerment-lead-action.ts","webpack:///src/app/views/user/user-list.component.ts","webpack:///src/app/views/user/user-list.component.html","webpack:///src/app/utils/helpers/utility-helper.ts","webpack:///src/app/containers/index.ts","webpack:///src/app/utils/constants.ts","webpack:///src/app/views/user/user-permission/user-permission.component.ts","webpack:///src/app/views/user/user-permission/user-permission.component.html","webpack:///src/app/http-error-handler.service.ts","webpack:///src/app/containers/default-layout/default-layout.component.ts","webpack:///src/app/containers/default-layout/default-layout.component.html","webpack:///src/app/models/leadsmanagerment-model.ts","webpack:///src/app/services/http.service.ts","webpack:///src/app/message.service.ts","webpack:///src/app/views/modal/custom-modal.component.ts","webpack:///src/app/views/modal/custom-modal.component.html","webpack:///src/app/views/login/login.component.ts","webpack:///src/app/views/login/login.component.html","webpack:///src/app/services/leadsmanagerment.service.ts","webpack:///src/app/views/user/user.module.ts","webpack:///src/app/utils/enums/responseCode.enum.ts","webpack:///src/app/app.component.ts","webpack:///src/app/views/leadsmanagerment/leadsmanagerment-list/leadsmanagerment-list.component.ts","webpack:///src/app/views/leadsmanagerment/leadsmanagerment-list/leadsmanagerment-list.component.html","webpack:///src/app/models/leads-filter-model.ts","webpack:///src/app/views/leadsmanagerment/leadsmanagerment.module.ts","webpack:///src/app/utils/helpers/helper.ts","webpack:///src/app/app.module.ts","webpack:///src/app/app.routing.ts","webpack:///src/app/_nav.ts","webpack:///src/app/views/error/500.component.ts","webpack:///src/app/views/error/500.component.html","webpack:///src/app/views/user/user-edit.component.ts","webpack:///src/app/views/user/user-edit.component.html","webpack:///src/app/models/change-password.ts","webpack:///src/app/views/leadsmanagerment/leadsmanagerment-routing.module.ts","webpack:///src/app/utils/enums/system-role.enum.ts","webpack:///src/app/services/auth.service.ts","webpack:///src/app/utils/helpers/match.validator.ts","webpack:///src/app/views/modal/custom-modal.module.ts","webpack:///src/app/utils/helpers/permission-helper.ts","webpack:///src/app/models/Campaign.ts","webpack:///src/app/services/user.service.ts","webpack:///src/app/utils/helpers/jwt.helper.ts","webpack:///src/app/views/leadsmanagerment/leadsmanagerment-add-lead/leadsmanagerment-add-lead.component.ts","webpack:///src/app/views/leadsmanagerment/leadsmanagerment-add-lead/leadsmanagerment-add-lead.component.html","webpack:///src/app/models/permission-save.ts","webpack:///src/app/views/user/user-permission-create/user-permission-create.component.ts","webpack:///src/app/views/user/user-permission-create/user-permission-create.component.html","webpack:///src/main.ts","webpack:///$_lazy_route_resource lazy namespace object"],"names":["UserIndexModel","result","ResponseData","Pager","NotifyModel","GroupRole","SystemCode","AdminUserModel","UserLoginModel","routes","path","component","data","title","UserRoutingModule","forChild","P404Component","environment","production","API_URL","APP_TITLE","CLIENT_URL","loginSSO","loginUrl","UserChangePasswordComponent","router","userService","toastr","changePass","newPassword","confirmNewPassword","warning","resetPassword","subscribe","response","code","Success","success","message","navigateByUrl","Warning","error","changePassWord","CampaignComponent","leadsService","campaign","getallCampaign","res","lstCampaign","ListCampaign","saveCampaign","Id","unshift","LeadsmanagermentDetailComponent","LeadAction","UserListComponent","filter","getList","pageIndex","filterKeyword","userName","search","userId","modalDialog","showConfirm","navigate","queryParams","UtilityHelper","dateValue","fmt","arrPart","split","firstTime","secondTime","separator","format","arrFirstTime","arrSecondTime","parseInt","o","newO","origKey","newKey","value","Array","map","toPascal","hasOwnProperty","charAt","toUpperCase","slice","toString","constructor","Object","Constants","TokenKey","RolesKey","AdminUsername","ChecksumClient","IsNotSSO","RetryCount401","ReturnUrl","loading","UserPermissionComponent","activatedRoute","permissionSave","lstPermission","params","getPermissionByUserName","Error","id","confirm","deletePermission","create","HttpErrorHandler","messageService","createHandleError","serviceName","operation","handleError","console","ErrorEvent","status","add","DefaultLayoutComponent","httpService","authService","sidebarMinimized","navItems","currUserName","getMenuItems","IsAuthenticated","doRedirectLogin","window","localStorage","getItem","doLogout","e","toggleMinimize","LeadsManagermentModel","IsChangeCar","StableIncome","HasWife","HasChild","GoodAddress","LookingOtherCar","GoodActionDealer","IsSoldCar","IsActive","HttpService","http","toastrService","spinner","token","checksumClient","length","decode","decodeToken","uniqueName","unique_name","toLowerCase","route","model","isShowLoading","show","authorizationKey","isExpired","hide","httpOptions","headers","Authorization","httpRequest","post","pipe","RefreshToken","validChecksumClient","Token","setItem","callDeleteLockRefreshToken","setTimeout","removeItem","fileToUpload","formData","FormData","append","name","i","get","err","doRedirect405","isLogout","isNotSSO","url","location","href","returnUrl","then","log","source","target","keys","forEach","key","ChecksumKeyModel","JSON","stringify","MessageService","messages","push","CustomModalComponent","onConfirm","modalTitle","modalContent","modelActionType","primaryModal","emit","doConfirm","PrimaryWhite","LoginComponent","titleService","primaryColour","setTitle","_userLoginModel","doLogin","login","LeadsmanagermentService","lead","doPost","leadId","doGet","leadModel","UserModule","forRoot","ResponseCode","AppComponent","events","evt","scrollTo","LeadsmanagermentListComponent","leadsmanagermentService","filterModel","dealerList","isErrFromDate","isErrToDate","IsSelectAll","TotalRecord","getFormFilter","list","page","pageSize","totalRecord","makeList","modelList","cityList","secondHandList","userList","leadStatusList","campaignList","sourceLeadsList","boxLeadsList","bankList","paymentStatusList","event","checkformatdatehmm","onChangeCreateFromDate","getListNotFilter","pageChange","LeadsFilterModel","LeadsmanagermentModule","provide","useValue","appearance","HelperFormat","inputVal","regexMobile1","regexMobile2","test","obj","undefined","replace","defaultReturn","x","trim","date","year","getFullYear","month","getMonth","substring","day","getDate","DEFAULT_PERFECT_SCROLLBAR_CONFIG","suppressScrollX","APP_CONTAINERS","AppModule","useClass","timeOut","positionClass","preventDuplicates","children","loadChildren","m","BaseModule","ButtonsModule","ChartJSModule","DashboardModule","IconsModule","NotificationsModule","ThemeModule","WidgetsModule","DailyWorkTimeModule","ShiftExchangeEmployeeModule","AppRoutingModule","icon","attributes","role","Admin","P500Component","UserEditComponent","formBuilder","submitted","isAdminRole","IsAdminRole","snapshot","editMode","registerForm","group","username","disabled","required","password","minLength","maxLength","confirmPassword","fullname","email","phone","description","isAdminGroup","groups","validator","getToEdit","loadForm","getGroupRoles","userModel","patchValue","Number","controls","invalid","update","getRawValue","reset","onSubmit","ChangePassword","LeadsmanagermentRoutingModule","SystemRole","AuthService","roleName","groupRole","isAdmin","roles","indexOf","owner","loginUserInfo","currentUser","userLoginModel","withCredentials","jsonRoles","parse","ex","adminUserModel","certserialnumber","isadmingroup","MatchValidator","controlName","matchingControlName","formGroup","control","matchingControl","errors","mustMatch","setErrors","CustomModalModule","PermissionHelper","currUser","hasRole","arrRoleItem","roleItem","menuItems","arr","els","childArr","childEls","Campaign","UserService","cityId","JwtHelper","parts","decoded","urlBase64Decode","objToken","Math","floor","Date","getTime","exp","str","output","decodeURIComponent","escape","atob","LeadsmanagermentAddLeadComponent","leadService","leads","isNaN","modeInsert","leadsModel","selectChangeCar","ListAction","resetForm","initValue","form","formSubmitAttempt","copyValueFromForm","valid","checkValidateLeadAction","addLead","pop","getFormCreate","listPayment","lstPaymentStatus","sources","lstSource","listCampaign","listUser","lstUser","lstmake","lstmodel","lstSecondhand","lstLeadActionType","initForm","FullName","Mobile","Email","CampaignType","ChangeCarTime","CurrentCar","PaymentStatus","SourceLead","pattern","Description","Address","ExpectedDescription","PriceRage","LoanMoney","LoanTime","Job","Income","ReasonChangeCar","FamilyIncome","StartCareDate","CityId","AssignToId","OtherCar","DealerConsider","Note","toLocaleDateString","replaceAll","DealerNote","lstLeadAction","item","MakeId","ModelId","SecondHand","ojbNeedAppend","objAppend","submit","addHTMLInfoCar","removeHTMLInfoCar","onItemChange","PermissionSave","UserPermissionCreateComponent","initPermission","initObj","permissionInit","lstCity","departmentId","roleId","save","newCityId","getDepartmentByCityId","lstDepartment","changeCity","bootstrapModule","preserveWhitespaces","webpackEmptyAsyncContext","req","Promise","resolve","module","exports"],"mappings":"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","file":"main-es5.js","sourcesContent":["import { UserSearchResult } from './user-search-result';\r\n\r\nexport class UserIndexModel {\r\n    constructor() {\r\n        this.result= [];\r\n    }\r\n    filterKeyword: string;\r\n    cityId: number;\r\n    departmentId: number;\r\n    userName: string;\r\n    pageIndex: number;\r\n    pageSize: number;\r\n    result: UserSearchResult[];\r\n    totalRecord: number;\r\n}\r\n","export class ResponseData {\r\n    code: number;\r\n    message: string;\r\n    data: any;\r\n    token: string;\r\n}\r\nexport class Pager {\r\n    public totalItem: number;\r\n    public totalPage: number;\r\n    public pageSize: number;\r\n    public currentPage: number;\r\n}\r\n\r\nexport class NotifyModel {\r\n    public type: string;\r\n    public msg: string;\r\n    public timeout: number;\r\n}\r\n\r\nexport class GroupRole {\r\n    public isAdmin: boolean;\r\n    public isAdminGroup: boolean;\r\n    public roles: string[];\r\n}\r\n\r\nexport enum SystemCode{\r\n    Error = 0,\r\n    /// <summary>\r\n    /// Thành công\r\n    /// </summary>\r\n    Success = 1,\r\n    /// <summary>\r\n    /// Lỗi báo đối tượng được kiểm tra là đã tồn tại\r\n    /// </summary>\r\n    ErrorExist = 2,\r\n    /// <summary>\r\n    /// Không có dữ liệu\r\n    /// </summary>\r\n    DataNull = 3,\r\n    /// <summary>\r\n    /// Tham số không đúng\r\n    /// </summary>\r\n    ErrorParam = 4,\r\n    /// <summary>\r\n    /// Không có quyền thực thi\r\n    /// </summary>\r\n    NotPermitted = 5,\r\n    /// <summary>\r\n    /// Không hợp lệ\r\n    /// </summary>\r\n    NotValid = 6,\r\n    /// <summary>\r\n    /// Lỗi kết nối\r\n    /// </summary>\r\n    ErrorConnect = 7,\r\n    /// <summary>\r\n    /// Lỗi liên quan đến các vấn đề vượt quá giới hạn\r\n    /// </summary>\r\n    Overflow = 8\r\n}\r\n","export class AdminUserModel {\r\n\tpublic userId: number;\r\n\tpublic username: string;\r\n\tpublic password: string;\r\n    public confirmPassword: string;\r\n\tpublic fullname: string;\r\n\tpublic avatar: string;\r\n\tpublic description: string;\r\n\tpublic email: string;\r\n\tpublic phone: string;\r\n\tpublic tokenKey: string;\r\n\tpublic createdDate: string;\r\n\tpublic createdBy: string;\r\n\tpublic groups: string;\r\n    public roles: string;\r\n    public isAdminGroup: boolean;\r\n\tpublic status: number;\r\n    public allowEdit: boolean;\r\n    public allowDelete: boolean;\r\n}\r\n\r\nexport class UserLoginModel {\r\n    public username: string;\r\n    public password: string;\r\n    public remember: boolean;\r\n    public returnUrl: string;\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { UserListComponent } from './user-list.component';\r\nimport { UserEditComponent } from './user-edit.component';\r\nimport { UserPermissionComponent } from './user-permission/user-permission.component';\r\nimport { UserPermissionCreateComponent } from './user-permission-create/user-permission-create.component';\r\nimport { UserChangePasswordComponent } from './user-change-password/user-change-password.component';\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path: '',\r\n        component: UserListComponent,\r\n        data: {\r\n            title: 'Danh sách người dùng'\r\n        }\r\n    },\r\n    {\r\n        path: 'list',\r\n        component: UserListComponent,\r\n        data: {\r\n            title: 'Danh sách người dùng'\r\n        },\r\n    },\r\n    {\r\n        path: 'permission',\r\n        component: UserPermissionComponent,\r\n        data: {\r\n            title: 'Quyền của người dùng'\r\n        },\r\n    },\r\n    {\r\n        path: 'add-permission',\r\n        component: UserPermissionCreateComponent,\r\n        data: {\r\n            title: 'Tạo mới quyền'\r\n        }\r\n    },\r\n    {\r\n        path: 'change-password',\r\n        component: UserChangePasswordComponent,\r\n        data: {\r\n            title: 'Thay đổi mật khẩu'\r\n        }\r\n    }\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forChild(routes)],\r\n    exports: [RouterModule]\r\n})\r\nexport class UserRoutingModule { }\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  templateUrl: '404.component.html'\r\n})\r\nexport class P404Component {\r\n\r\n  constructor() { }\r\n\r\n}\r\n","<div class=\"app flex-row align-items-center\">\r\n  <div class=\"container\">\r\n    <div class=\"row justify-content-center\">\r\n      <div class=\"col-md-6\">\r\n        <div class=\"clearfix\">\r\n          <h1 class=\"float-left display-3 mr-4\">404</h1>\r\n          <h4 class=\"pt-3\">Oops! You're lost.</h4>\r\n          <p class=\"text-muted\">The page you are looking for was not found.</p>\r\n        </div>\r\n        <div class=\"input-prepend input-group\">\r\n          <div class=\"input-group-prepend\">\r\n            <span class=\"input-group-text\"><i class=\"fa fa-search\"></i></span>\r\n          </div>\r\n          <input id=\"prependedInput\" class=\"form-control\" size=\"16\" type=\"text\" placeholder=\"What are you looking for?\">\r\n          <span class=\"input-group-append\">\r\n            <button class=\"btn btn-info\" type=\"button\">Search</button>\r\n          </span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  API_URL: \"http://localhost:5000/api\",\r\n  APP_TITLE: 'Tasty Stock',\r\n  CLIENT_URL: 'http://localhost:4500',\r\n  loginSSO: false,\r\n  loginUrl: 'https://sso.daivietgroup.net/account/logincallback'\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { ChangePassword } from 'src/app/models/change-password';\r\nimport { ResponseData } from 'src/app/models/ResponseData';\r\nimport { UserService } from 'src/app/services/user.service';\r\nimport { ResponseCode } from 'src/app/utils/enums/responseCode.enum';\r\n\r\n@Component({\r\n  selector: 'app-user-change-password',\r\n  templateUrl: './user-change-password.component.html',\r\n  styleUrls: ['./user-change-password.component.css'],\r\n  providers: [UserService]\r\n})\r\nexport class UserChangePasswordComponent implements OnInit {\r\n  changePass: ChangePassword;\r\n  constructor(private router: Router,\r\n              private userService: UserService,\r\n              private toastr: ToastrService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.changePass = new ChangePassword();\r\n  }\r\n  changePassWord(): void {\r\n    if(this.changePass.newPassword !== '' && this.changePass.newPassword !== this.changePass.confirmNewPassword) {\r\n      this.toastr.warning('Thông tin mật khẩu mới và thông tin xác nhận mật khẩu không khớp nhau!');\r\n    } else {\r\n      this.userService.resetPassword(this.changePass).subscribe( (response: ResponseData) => {\r\n        if (response.code === ResponseCode.Success) {\r\n          this.toastr.success(response.message);\r\n          this.router.navigateByUrl('/');\r\n        } else if (response.code === ResponseCode.Warning) {\r\n          this.toastr.warning(response.message);\r\n        } else {\r\n          this.toastr.error(response.message);\r\n        }\r\n      });\r\n    }\r\n  }\r\n}\r\n","<div class=\"animated fadeIn\">\r\n    <div class=\"row\">\r\n        <div class=\"col-md-12 col-lg-12\">\r\n            <div class=\"card\">\r\n                <div class=\"card-header\"></div>\r\n                <div class=\"card-body\">\r\n                    <form name=\"formChangePass\"  (ngSubmit)=\"formchangpass.form.valid && changePassWord()\" #formchangpass=\"ngForm\" >\r\n                        <div class=\"row\">\r\n                            <div class=\"col-sm-12\">\r\n                                <div class=\"form-group\">\r\n                                    <label >Mật khẩu cũ <span class=\"required-label\">*</span></label>\r\n                                    <input type=\"password\" [(ngModel)]=\"changePass.currentPassword\" #currentPassword=\"ngModel\" required name=\"oldPassword\" class=\"form-control\" />\r\n                                    <div *ngIf=\"formchangpass.submitted && currentPassword.invalid\" class=\"invalid-feedback display-block\">\r\n                                        <div *ngIf=\"currentPassword.errors.required\">Bạn phải nhập mật khẩu cũ</div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-sm-12\">\r\n                                <div class=\"form-group\">\r\n                                    <label>Mật khẩu mới <span class=\"required-label\">*</span></label>\r\n                                    <input type=\"password\" [(ngModel)]=\"changePass.newPassword\" #newPassword=\"ngModel\" required name=\"newPassword\" class=\"form-control\" />\r\n                                    <div *ngIf=\"formchangpass.submitted && newPassword.invalid\" class=\"invalid-feedback display-block\">\r\n                                        <div *ngIf=\"newPassword.errors.required\">Bạn phải nhập mật khẩu mới</div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-sm-12\">\r\n                                <div class=\"form-group\">\r\n                                    <label>Nhập lại mật khẩu <span class=\"required-label\">*</span></label>\r\n                                    <input type=\"password\" [(ngModel)]=\"changePass.confirmNewPassword\" #confirmNewPassword=\"ngModel\" required name=\"confirmNewPassword\" class=\"form-control\" />\r\n                                    <div *ngIf=\"formchangpass.submitted && confirmNewPassword.invalid\" class=\"invalid-feedback display-block\">\r\n                                        <div *ngIf=\"confirmNewPassword.errors.required\">Bạn phải nhập mật khẩu xác nhận</div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"row\">\r\n                            <div class=\"col-sm-12\">\r\n                                <button type=\"submit\" class=\"btn btn-primary\">Lưu</button>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { Campaign } from 'src/app/models/Campaign';\nimport { ResponseData, SystemCode } from 'src/app/models/ResponseData';\nimport { LeadsmanagermentService } from 'src/app/services/leadsmanagerment.service';\n\n@Component({\n  selector: 'app-campaign',\n  templateUrl: './campaign.component.html',\n  styleUrls: ['./campaign.component.css']\n})\nexport class CampaignComponent implements OnInit {\n  campaign: Campaign;\n  lstCampaign: Campaign[];\n  constructor(\n    private leadsService: LeadsmanagermentService,\n    private toastr: ToastrService,\n    private router: Router\n  ) {\n  }\n\n  ngOnInit(): void {\n    this.campaign = new Campaign();\n    this.leadsService.getallCampaign();\n  }\n  getAllCampaign() {\n    this.leadsService.getallCampaign().subscribe((res: ResponseData) => {\n      if (res.code == SystemCode.Success) {\n        this.lstCampaign = res.data.ListCampaign as Campaign[];\n      }\n    });\n  }\n  insertCampaign() {\n    this.leadsService.saveCampaign(this.campaign).subscribe((res: ResponseData) => {\n        if (res.code == SystemCode.Success) {\n          this.campaign.Id = +res.data;\n          this.lstCampaign.unshift(this.campaign);\n        }\n    });\n  }\n}\n","<div class=\"container-fluid\">\n  <div class=\"animated fadeIn\">\n    <div class=\"row\">\n      <div class=\"col-md-12 col-lg-12\">\n        <div class=\"card\">\n          <div class=\"card-header\">\n            <i class=\"fa fa-align-justify\"></i> <b>Campaign</b>\n\n            <div class=\"col-md-3 col-lg-3\">\n              <!-- <ng-select [items]=\"lstCampaign\" bindLabel=\"Name\" bindValue=\"Id\"\n                                [(ngModel)]=\"campaign.Id\" name=\"Id\" placeholder=\"--Campaign--\">\n                            </ng-select> -->\n            </div>\n            <a href=\"javascript:void(0)\" aria-pressed=\"true\" class=\"btn btn-square btn-primary active pull-right\"\n              type=\"button\"><i class=\"icon-plus\"></i> Thêm campaign</a>\n            <a href=\"javascript:void(0)\" aria-pressed=\"true\" class=\"btn btn-square btn-danger active pull-right\"\n              type=\"button\"><i class=\"icon-plus\"></i>Download Template Import Excel</a>\n            <a href=\"javascript:void(0)\" aria-pressed=\"true\" class=\"btn btn-square btn-danger active pull-right\"\n              type=\"button\"><i class=\"icon-plus\"></i>Import Lead</a>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-leadsmanagerment-detail',\r\n  templateUrl: './leadsmanagerment-detail.component.html',\r\n  styleUrls: ['./leadsmanagerment-detail.component.css']\r\n})\r\nexport class LeadsmanagermentDetailComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<p>leadsmanagerment-detail works!</p>\r\n","export * from './default-layout.component';\r\n","\r\nexport class LeadAction {\r\n    constructor() {\r\n    }\r\n\r\n    Id: Number;\r\n    LeadsId: Number;\r\n    MakeId: Number;\r\n    ModelId: Number;\r\n    SecondHand: Number;\r\n    CityId: Number;\r\n    Type: Number;\r\n    Source: Number;\r\n    BankId: Number;\r\n\r\n    CreatedDate: Date;\r\n    CreatedBy: string;\r\n    LastModifiedDate: Date;\r\n    LastModifiedBy: string;\r\n    OtherInformation: string;\r\n\r\n}\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { UserService } from '../../services/user.service';\r\nimport { AdminUserModel } from '../../models/AdminUserModel';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { CustomModalComponent } from '../modal/custom-modal.component';\r\nimport { AuthService } from '../../services/auth.service';\r\nimport { GroupRole, ResponseData } from '../../models/ResponseData';\r\nimport { UserIndexModel } from 'src/app/models/user-index-model';\r\nimport { ResponseCode } from 'src/app/utils/enums/responseCode.enum';\r\n\r\n@Component({\r\n    selector: 'app-user-list',\r\n    templateUrl: 'user-list.component.html',\r\n    providers: [UserService],\r\n})\r\n\r\nexport class UserListComponent implements OnInit {\r\n    @ViewChild('modalDialog') modalDialog: CustomModalComponent;\r\n    userList: AdminUserModel[];\r\n    groupRole: GroupRole;\r\n    loginUser: AdminUserModel;\r\n    allowAdd: boolean;\r\n    filter: UserIndexModel;\r\n\r\n    constructor(\r\n        private userService: UserService,\r\n        private toastr: ToastrService,\r\n        private router: Router) {\r\n        this.filter = new UserIndexModel();\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.getList(1);\r\n    }\r\n\r\n    getList(pageIndex: number): void {\r\n        if(this.filter.filterKeyword == null) this.filter.filterKeyword = '';\r\n        if(this.filter.userName == null) this.filter.userName = '';\r\n        this.filter.pageIndex = pageIndex;\r\n        this.userService.search(this.filter).subscribe( (res: UserIndexModel) => {\r\n            if(res != null) {\r\n                this.filter = res;\r\n            }\r\n        });\r\n    }\r\n\r\n    // changePage(event): void {\r\n    //     this.pageIndex = event;\r\n    //     const params = this.getRequestParams(this.pageIndex, this.pageSize);\r\n    //     this.router.navigate(['/user/list'], { queryParams: params });\r\n    //     //this.getList();\r\n    // }\r\n\r\n    \r\n\r\n    // getRequestParams(pageIndex: number, pageSize: number): any {\r\n    //     const params = {};\r\n    //     const userProperties = Object.getOwnPropertyNames(this.searchModel);\r\n\r\n    //     for (let i = 0; i < userProperties.length; i++) {\r\n    //         if (this.searchModel[userProperties[i]] !== undefined) {\r\n    //             params[userProperties[i]] = this.searchModel[userProperties[i]];\r\n    //         }\r\n    //     }\r\n    //     if (pageIndex > 0) {\r\n    //         params['pageIndex'] = pageIndex;\r\n    //     } else {\r\n    //         params['pageIndex'] = 1;\r\n    //     }\r\n    //     params['pageSize'] = pageSize;\r\n\r\n    //     return params;\r\n    // }\r\n\r\n    // Delete button event\r\n    delete(userId) {\r\n        this.modalDialog.showConfirm('Xác nhận', 'Bạn có chắc chắn muốn xóa người dùng này', 1, userId);\r\n    }\r\n\r\n    // Edit click event\r\n    edit(userId) {\r\n        this.router.navigate(['/user/edit'], { queryParams: { userId: userId } });\r\n    }\r\n\r\n    // Callback delete\r\n    // doDelete(userId) {\r\n    //     this.userService.delete(userId).subscribe(response => {\r\n    //         if (!response.success) {\r\n    //             this.toastr.error(response.message);\r\n    //         } else {\r\n    //             this.getList();\r\n    //         }\r\n    //         this.userList = response.data;\r\n    //         this.total = response.total;\r\n    //     }, error => { this.toastr.error(error); });\r\n    // }\r\n    \r\n}\r\n","<div class=\"animated fadeIn\">\r\n    <div class=\"row\">\r\n        <div class=\"col-md-12 col-lg-12\">\r\n            <div class=\"card\">\r\n                <div class=\"card-header\">\r\n                    Search\r\n                </div>\r\n                <div class=\"card-body\">\r\n                    <div class=\"form-group row\">\r\n                        <div class=\"col-md-3 col-lg-3\">\r\n                            <input type=\"text\" class=\"form-control\" placeholder=\"Tên đăng nhập\" [(ngModel)]=\"filter.userName\" />\r\n                        </div>\r\n                        <div class=\"col-md-3 col-lg-3\">\r\n                            <button class=\"btn btn-block btn-success\" type=\"button\" (click)=\"getList(1)\">Tìm kiếm</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n        <div class=\"col-md-12 col-lg-12\">\r\n            <div class=\"card\">\r\n                <div class=\"card-header\">\r\n                    <i class=\"fa fa-align-justify\"></i> Danh sách người dùng\r\n                    <a [routerLink]=\"['/user/edit']\" aria-pressed=\"true\" class=\"btn btn-square btn-primary active pull-right\" type=\"button\" *ngIf=\"allowAdd\">Thêm người dùng</a>\r\n                </div>\r\n                <div class=\"card-body\">\r\n                    \r\n                    <div class=\"row\"  style=\"margin-top:10px;\">\r\n                        <div class=\"col-md-12 mb-4\">\r\n                            <table class=\"table\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>ID</th>\r\n                                        <th>Tên đăng nhập</th>\r\n                                        <th>Trạng thái</th>\r\n                                        <th></th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    <tr *ngFor=\"let model of filter.result\">\r\n                                        <td>{{ model.employeeId }}</td>\r\n                                        <td>{{ model.userName }}</td>\r\n                                        <td> \r\n                                            <span *ngIf=\"model.status else spanLockStatus\" style=\"font-size: 0.875rem; font-weight: 400; line-height: 1.5; color: white;\" class=\"badge badge-success\">Hoạt động</span> \r\n                                            <ng-template #spanLockStatus>\r\n                                                <span style=\"font-size: 0.875rem; font-weight: 400; line-height: 1.5; color: white;\" class=\"badge badge-danger\">Khóa</span> \r\n                                            </ng-template>\r\n                                            </td>\r\n                                        <td class=\"text-right\">\r\n                                            <a href=\"/user/permission?username={{model.userName}}\" title=\"Phân quyền cho người dùng\">\r\n                                                <i class=\"fa fa-group\" style=\"font-size: 25px;\" ></i>\r\n                                            </a>\r\n                                        </td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                    \r\n                    <div class=\"row\">\r\n                        <div class=\"col-xs-12 col-12\">\r\n                            <pagination [itemsPerPage]=\"filter.pageSize\" [totalItems]=\"filter.totalRecord\" [(ngModel)]=\"filter.pageIndex\" [maxSize]=\"5\" class=\"pagination-sm\"\r\n                                    previousText=\"&lsaquo;\" nextText=\"&rsaquo;\" firstText=\"&laquo;\" lastText=\"&raquo;\"\r\n                                    [boundaryLinks]=\"true\" [rotate]=\"false\" (pageChanged)=\"getList($event.page)\"></pagination>\r\n\r\n                        </div>\r\n                    </div>\r\n                    \r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n","export class UtilityHelper {\r\n\r\n    public static convertDate(dateValue: string, fmt: string): string {\r\n        const arrPart = dateValue.split('-');\r\n        switch (fmt) {\r\n            case 'MM/dd/yyyy':\r\n                return arrPart[1] + '/' + arrPart[2] + '/' + arrPart[0];\r\n            default:\r\n                return arrPart[2] + '/' + arrPart[1] + '/' + arrPart[0];\r\n        }\r\n    }\r\n    public static dateLargerOrEqual(firstTime: string, secondTime: string, separator: string = '/', format:string= 'yyyy-MM-dd'): boolean {\r\n        const arrFirstTime = firstTime.split(separator);\r\n        const arrSecondTime = secondTime.split(separator);\r\n        switch(format)\r\n        {\r\n            case 'yyyy-MM-dd':\r\n                // So sánh năm\r\n                if ( parseInt(arrFirstTime[0] + arrFirstTime[1] + arrFirstTime[2], 10) < parseInt(arrSecondTime[0] + arrSecondTime[1] + arrSecondTime[2], 10) ) {\r\n                    return false;\r\n                }\r\n                // // So sánh tháng\r\n                // if ( parseInt(arrFirstTime[1], 10) < parseInt(arrSecondTime[1], 10) ) {\r\n                //     return false;\r\n                // }\r\n                // // So sánh ngày\r\n                // if ( parseInt(arrFirstTime[2], 10) < parseInt(arrSecondTime[2], 10) ) {\r\n                //     return false;\r\n                // }\r\n                return true;\r\n            case 'dd/MM/yyyy':\r\n            default:\r\n                // So sánh năm\r\n                if ( parseInt(arrFirstTime[2] + arrFirstTime[1] + arrFirstTime[0], 10) < parseInt(arrSecondTime[2] + arrSecondTime[1] + arrSecondTime[0], 10) ) {\r\n                    return false;\r\n                }\r\n                // // So sánh tháng\r\n                // if ( parseInt(arrFirstTime[0], 10) < parseInt(arrSecondTime[0], 10) ) {\r\n                //     return false;\r\n                // }\r\n                // // So sánh ngày\r\n                // if ( parseInt(arrFirstTime[1], 10) < parseInt(arrSecondTime[1], 10) ) {\r\n                //     return false;\r\n                // }\r\n                return true;\r\n        }\r\n      }\r\n      \r\n     public static toPascal(o) {\r\n        var newO, origKey, newKey, value\r\n        if (o instanceof Array) {\r\n          return o.map(function(value) {\r\n              if (typeof value === \"object\") {\r\n                value = UtilityHelper.toPascal(value)\r\n              }\r\n              return value\r\n          })\r\n        } else {\r\n          newO = {}\r\n          for (origKey in o) {\r\n            if (o.hasOwnProperty(origKey)) {\r\n              newKey = (origKey.charAt(0).toUpperCase() + origKey.slice(1) || origKey).toString()\r\n              value = o[origKey]\r\n              if (value instanceof Array || (value !== null && value.constructor === Object)) {\r\n                value = UtilityHelper.toPascal(value)\r\n              }\r\n              newO[newKey] = value\r\n            }\r\n          }\r\n        }\r\n        return newO\r\n      }\r\n}\r\n","export * from './default-layout';\r\n","export class Constants {\r\n    public static readonly TokenKey = \"TokenKey\";\r\n    public static readonly RolesKey = \"RolesKey\";\r\n    public static readonly AdminUsername = \"admin\";\r\n    public static readonly ChecksumClient = 'ChecksumClient';\r\n    public static readonly IsNotSSO = 'IsNotSSO';\r\n    public static readonly RetryCount401 = '_401';\r\n    public static readonly ReturnUrl = 'ReturnUrl';\r\n    public static loading = false;\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { PermissionInit } from 'src/app/models/permission-init';\r\nimport { PermissionSave } from 'src/app/models/permission-save';\r\nimport { ResponseData } from 'src/app/models/ResponseData';\r\nimport { UserSearchResult } from 'src/app/models/user-search-result';\r\nimport { UserService } from 'src/app/services/user.service';\r\nimport { ResponseCode } from 'src/app/utils/enums/responseCode.enum';\r\n\r\n@Component({\r\n  selector: 'app-user-permission',\r\n  templateUrl: './user-permission.component.html',\r\n  styleUrls: ['./user-permission.component.css'],\r\n  providers: [UserService]\r\n})\r\nexport class UserPermissionComponent implements OnInit {\r\n  permissionInit: PermissionInit;\r\n  permissionSave: PermissionSave;\r\n  userName: string;\r\n  lstPermission: UserSearchResult[];\r\n  constructor(private activatedRoute: ActivatedRoute,\r\n              private userService: UserService,\r\n              private toastr: ToastrService,\r\n              private router: Router) { \r\n                this.permissionSave = new PermissionSave();\r\n                this.lstPermission = [];\r\n              }\r\n\r\n  ngOnInit(): void {\r\n    this.activatedRoute.queryParams.subscribe(params => {\r\n      this.userName = params['username'];\r\n      this.getList();\r\n    });\r\n  }\r\n  getList(): void {\r\n    this.userService.getPermissionByUserName(this.userName).subscribe((res: ResponseData) => {\r\n      if(res.code === ResponseCode.Success) {\r\n        //this.toastr.success(res.message);\r\n        this.lstPermission = res.data as UserSearchResult[];\r\n      } else if(res.code === ResponseCode.Error) {\r\n        this.toastr.error(res.message);\r\n      } else {\r\n        this.toastr.warning(res.message)  \r\n      }\r\n    });\r\n  }\r\n  create(): void {\r\n    this.router.navigateByUrl('/user/add-permission?username=' +this.userName);\r\n  }\r\n  delete_permission(id: number): void{\r\n    if(confirm('Bạn có muốn xóa quyền này ?')) {\r\n      this.userService.deletePermission(id).subscribe((res: ResponseData)=> {\r\n        if(res.code === ResponseCode.Success) {\r\n          this.toastr.success(res.message);\r\n          //this.router.navigateByUrl('/user/permission?username='+this.userName);\r\n          this.getList();\r\n        } else if(res.code === ResponseCode.Error) {\r\n          this.toastr.error(res.message);\r\n        } else {\r\n          this.toastr.warning(res.message);\r\n        }\r\n      });\r\n    }\r\n  }\r\n}\r\n","<div class=\"animated fadeIn\">\r\n    <div class=\"row\">\r\n        <div class=\"col-md-12 col-lg-12\">\r\n            <div class=\"card\">\r\n                <div class=\"card-header\"></div>\r\n                <div class=\"card-body\">\r\n                    <button type=\"button\" (click)=\"create()\"  class=\"btn btn-block btn-primary\">Thêm quyền</button>\r\n                    <div class=\"row\" style=\"margin-top:10px;\">\r\n                        <div class=\"container-responsive\">\r\n                            <table class=\"table\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th></th>\r\n                                        <th>ID</th>\r\n                                        <th>Chi nhánh</th>\r\n                                        <th>Phòng ban</th>\r\n                                        <th>Quyền</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    <tr *ngFor=\"let item of lstPermission\">\r\n                                        <td>\r\n                                            <a (click)=\"delete_permission(item.id)\" href=\"javascript:void(0);\" style=\"color: red;\">\r\n                                                <i class=\"fa fa-remove\" style=\"font-size: 25px;\" ></i>\r\n                                            </a>\r\n                                        </td>\r\n                                        <td>{{item.id}}</td>\r\n                                        <td>{{item.cityName}}</td>\r\n                                        <td>{{item.departmentName}}</td>\r\n                                        <td>{{item.roleName}}</td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                        \r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","import { Injectable } from '@angular/core';\r\nimport { HttpErrorResponse } from '@angular/common/http';\r\n\r\nimport { Observable, of } from 'rxjs';\r\n\r\nimport { MessageService } from './message.service';\r\n\r\n/** Type of the handleError function returned by HttpErrorHandler.createHandleError */\r\nexport type HandleError =\r\n  <T> (operation?: string, result?: T) => (error: HttpErrorResponse) => Observable<T>;\r\n\r\n/** Handles HttpClient errors */\r\n@Injectable()\r\nexport class HttpErrorHandler {\r\n  constructor(private messageService: MessageService) { }\r\n\r\n  /** Create curried handleError function that already knows the service name */\r\n  createHandleError = (serviceName = '') => {\r\n    return <T>(operation = 'operation', result = {} as T) =>\r\n      this.handleError(serviceName, operation, result);\r\n  }\r\n\r\n  /**\r\n   * Returns a function that handles Http operation failures.\r\n   * This error handler lets the app continue to run as if no error occurred.\r\n   * @param serviceName = name of the data service that attempted the operation\r\n   * @param operation - name of the operation that failed\r\n   * @param result - optional value to return as the observable result\r\n   */\r\n  handleError<T>(serviceName = '', operation = 'operation', result = {} as T) {\r\n\r\n    return (error: HttpErrorResponse): Observable<T> => {\r\n      // TODO: send the error to remote logging infrastructure\r\n      console.error(error); // log to console instead\r\n\r\n      const message = (error.error instanceof ErrorEvent) ?\r\n        error.error.message :\r\n        `server returned code ${error.status} with body \"${error.error}\"`;\r\n\r\n      // TODO: better job of transforming error for user consumption\r\n      this.messageService.add(`${serviceName}: ${operation} failed: ${message}`);\r\n\r\n      // Let the app keep running by returning a safe result.\r\n      return of(result);\r\n    };\r\n\r\n  }\r\n}\r\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { PermissionHelper } from 'src/app/utils/helpers/permission-helper';\r\nimport { AuthService } from '../../services/auth.service';\r\nimport { HttpService } from '../../services/http.service';\r\nimport { Constants } from '../../utils/constants';\r\nimport { navItems } from '../../_nav';\r\n\r\n@Component({\r\n    selector: 'app-dashboard',\r\n    templateUrl: './default-layout.component.html',\r\n    styleUrls: ['./default-layout.component.css'],\r\n    encapsulation: ViewEncapsulation.None\r\n})\r\nexport class DefaultLayoutComponent implements OnInit {\r\n    public sidebarMinimized = false;\r\n    public navItems = navItems;\r\n    public currUserName = null;\r\n\r\n    constructor(private httpService: HttpService, private authService: AuthService, private router: Router) {\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.navItems = PermissionHelper.getMenuItems(this.navItems);\r\n        if (!AuthService.IsAuthenticated) {\r\n            this.httpService.doRedirectLogin();\r\n            return;\r\n        } else {\r\n            this.currUserName= window.localStorage.getItem(Constants.ChecksumClient);\r\n        }\r\n    }\r\n\r\n    public doLogout() {\r\n        this.authService.doLogout().subscribe();\r\n    }\r\n\r\n    toggleMinimize(e) {\r\n        this.sidebarMinimized = e;\r\n    }\r\n}\r\n","<app-header\r\n  [sidebarToggler]=\"false\" [asideMenuToggler]=\"false\"\r\n  [mobileAsideMenuToggler]=\"false\"\r\n  [navbarBrandRouterLink]=\"['/']\"\r\n  [fixed]=\"true\"\r\n  [navbarBrandFull]=\"{src: 'assets/img/logo-2.png', width: 89, height: 'auto', alt: 'CoreUI Logo'}\"\r\n  [navbarBrandMinimized]=\"{src: 'assets/img/brand/sygnet.svg', width: 30, height: 30, alt: 'CoreUI Logo'}\"\r\n  >\r\n  <ul class=\"nav navbar-nav ml-auto\">\r\n    <li class=\"nav-item d-md-down-none\">\r\n      {{currUserName}} &nbsp;&nbsp;\r\n    </li>\r\n    <li class=\"nav-item dropdown\" dropdown placement=\"bottom right\">\r\n      <a class=\"nav-link\" data-toggle=\"dropdown\" href=\"#\" role=\"button\" style=\"background-color: #c8ced3;border-radius: 50%;position: relative;width: 35px;height: 35px;\" aria-haspopup=\"true\" aria-expanded=\"false\" dropdownToggle (click)=\"false\">\r\n        <i class=\"fa fa-user\" style=\"top: 30%;position: absolute;left: 35%;\"></i>\r\n      </a>\r\n      <div class=\"dropdown-menu dropdown-menu-right\" *dropdownMenu aria-labelledby=\"simple-dropdown\">\r\n        <a class=\"dropdown-item\" href=\"/user/change-password\"><i class=\"fa fa-user\"></i> Đổi mật khẩu ({{currUserName}})</a>\r\n        <a class=\"dropdown-item\" href=\"javascript:void(0)\" (click)=\"doLogout()\"><i class=\"fa fa-lock\"></i> Đăng xuất</a>\r\n      </div>\r\n    </li>\r\n  </ul>\r\n</app-header>\r\n<div class=\"app-body\">\r\n  <app-sidebar #appSidebar  [fixed]=\"true\" [display]=\"'lg'\" [minimized]=\"sidebarMinimized\" (minimizedChange)=\"toggleMinimize($event)\">\r\n    <app-sidebar-nav [navItems]=\"navItems\" [perfectScrollbar] [disabled]=\"appSidebar.minimized\"></app-sidebar-nav>\r\n    <app-sidebar-minimizer></app-sidebar-minimizer>\r\n  </app-sidebar>\r\n  <!-- Main content -->\r\n  <main class=\"main\">\r\n    <!-- Breadcrumb -->\r\n    <!-- breaking change 'cui-breadcrumb' -->\r\n    <cui-breadcrumb>\r\n      <!-- Breadcrumb Menu-->\r\n      <li class=\"breadcrumb-menu d-md-down-none\">\r\n        <div class=\"btn-group\" role=\"group\" aria-label=\"Button group with nested dropdown\">\r\n          <a class=\"btn\" href=\"#\"><i class=\"icon-speech\"></i></a>\r\n          <a class=\"btn\" [routerLink]=\"['/dashboard']\"><i class=\"icon-graph\"></i> &nbsp;Dashboard</a>\r\n          <a class=\"btn\" href=\"#\"><i class=\"icon-settings\"></i> &nbsp;Settings</a>\r\n        </div>\r\n      </li>\r\n    </cui-breadcrumb>\r\n    <div class=\"container-fluid\" style=\"padding-left: 5px;padding-right: 5px;\">\r\n      <router-outlet></router-outlet>\r\n    </div>\r\n  </main>\r\n  \r\n</div>\r\n<app-footer>\r\n  <span>Đại Việt Group</span>\r\n</app-footer>\r\n<ngx-spinner bdColor=\"rgba(0, 0, 0, 0.8)\" size=\"medium\" color=\"#fff\" type=\"ball-clip-rotate\" [fullScreen]=\"true\"></ngx-spinner>\r\n","import {LeadAction} from '../models/leadsmanagerment-lead-action'\r\nexport class LeadsManagermentModel {\r\n    constructor() {\r\n        this.IsChangeCar = false;\r\n        this.StableIncome = false;\r\n        this.HasWife = false;\r\n        this.HasChild = false;\r\n        this.GoodAddress = false;\r\n        this.LookingOtherCar = false;\r\n        this.GoodActionDealer = false;\r\n        this.IsSoldCar = false;\r\n        this.IsActive = true;     \r\n    }\r\n    \r\n    Id: number;\r\n    FullName: string;\r\n    Mobile: string;\r\n    Email: string;\r\n    CityId: number;\r\n    SourceLead: number;\r\n    StartCareDate: Date;\r\n    PaymentStatus: number;\r\n    CampaignType: number;\r\n    Description: string;\r\n    Address: string;\r\n    ExpectedDescription: string;\r\n    IsChangeCar: boolean;\r\n    ChangeCarTime: Date;\r\n    PriceRage: string;\r\n    LoanMoney: number;\r\n    LoanTime: number;\r\n    Job: string;\r\n    Income: number;\r\n    StableIncome: boolean;\r\n    CurrentCar: string;\r\n    ReasonChangeCar: string;\r\n    HasWife: boolean;\r\n    HasChild: boolean;\r\n    FamilyIncome: number;\r\n    AssignToId: number;\r\n    GoodAddress: boolean;\r\n    LookingOtherCar: boolean;\r\n    OtherCar: string;\r\n    GoodActionDealer: boolean;\r\n    DealerConsider: string;\r\n    IsSoldCar: boolean;\r\n    Note: string;\r\n\r\n    ListAction: LeadAction[];\r\n    //\r\n    DealerId: number;\r\n    DealerRecievedDate: Date;\r\n    IsActive: boolean;\r\n    Status: number;\r\n    CreatedDate: Date;\r\n    CreatedBy: string;\r\n    LastModifiedDate: Date;\r\n    LastModifiedBy: string;\r\n}\r\n\r\n","import { ToastrService } from 'ngx-toastr';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport {\r\n    HttpClient,\r\n    HttpErrorResponse,\r\n    HttpHeaders,\r\n    HttpParams\r\n} from '@angular/common/http';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { map, catchError } from 'rxjs/operators';\r\nimport { Injectable } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { environment } from 'src/environments/environment';\r\nimport { JwtHelper } from '../utils/helpers/jwt.helper';\r\nimport { Constants } from '../utils/constants';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class HttpService {\r\n    constructor(\r\n        private http: HttpClient,\r\n        private toastrService: ToastrService,\r\n        private router: Router,\r\n        private spinner: NgxSpinnerService\r\n    ) { }\r\n\r\n    public validChecksumClient(token: string) {\r\n        const checksumClient = window.localStorage.getItem(Constants.ChecksumClient);\r\n        if (token && token.length > 0) {\r\n            const decode = JwtHelper.decodeToken(token);\r\n            if (decode) {\r\n                const uniqueName = decode.unique_name.toLowerCase();\r\n                if (uniqueName && uniqueName.length > 0 && checksumClient && uniqueName === checksumClient.toLowerCase()) {\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    public doPost(route, model = null, params = null, isShowLoading = true): Observable<any> {\r\n        if (isShowLoading) {\r\n            this.spinner.show();\r\n        }\r\n\r\n        const authorizationKey = Constants.TokenKey;\r\n        const token = window.localStorage.getItem(authorizationKey);\r\n        if (token === null || token.length <= 0 || JwtHelper.isExpired(token)) {\r\n            if (isShowLoading) {\r\n                this.spinner.hide();\r\n            }\r\n            this.doRedirectLogin();\r\n            return new Observable<any>();\r\n        }\r\n        // if (params !== null) {\r\n        //     params = this.buildQueryStrings(params);\r\n        // }\r\n        const httpOptions = {\r\n            headers: new HttpHeaders({\r\n                'Content-Type': 'application/json',\r\n                Authorization: token\r\n            }),\r\n            params: params\r\n        };\r\n        // const httpRequest = model !== null\r\n        //     ? this.http.post<any>(route, JSON.stringify(model), httpOptions)\r\n        //     : this.http.post<any>(route, null, httpOptions);\r\n        const httpRequest = this.http.post<any>(route, model, httpOptions);\r\n        return httpRequest.pipe(\r\n            map(res => {\r\n                if (isShowLoading) {\r\n                    this.spinner.hide();\r\n                }\r\n                if (res != null && res.RefreshToken && res.RefreshToken === true) {\r\n                    // xử lý lưu thêm checksumClient = username để phòng server lỗi trả ra token của user khác\r\n                    if (this.validChecksumClient(res.Token)) {\r\n                        window.localStorage.setItem(Constants.TokenKey, res.Token);\r\n                        this.callDeleteLockRefreshToken(res.Token);\r\n                        res.Token = '';\r\n                    } else {\r\n                        this.toastrService.error('Checksum client invalid. Please login again!');\r\n                        setTimeout(() => {\r\n                            window.localStorage.removeItem(Constants.TokenKey);\r\n                        }, 2000);\r\n                    }\r\n                }\r\n                window.localStorage.removeItem(Constants.RetryCount401);\r\n                return res;\r\n            }),\r\n            catchError((error) => this.handleError(error))\r\n        );\r\n    }\r\n\r\n    public doPostFile(route, fileToUpload: File): Observable<any> {\r\n        const authorizationKey = Constants.TokenKey;\r\n        const token = window.localStorage.getItem(authorizationKey);\r\n        const formData: FormData = new FormData();\r\n        formData.append(fileToUpload.name, fileToUpload);\r\n        //formData.append(parameterName, fileToUpload);\r\n        const httpOptions = {\r\n            headers: new HttpHeaders({\r\n                Authorization: token\r\n            })\r\n        };\r\n        return this.http\r\n            .post<any>(route, formData, httpOptions)\r\n            .pipe(\r\n                map(res => {\r\n                    if (res != null && res.RefreshToken && res.RefreshToken === true) {\r\n                        // xử lý lưu thêm checksumClient = username để phòng server lỗi trả ra token của user khác\r\n                        if (this.validChecksumClient(res.Token)) {\r\n                            window.localStorage.setItem(Constants.TokenKey, res.Token);\r\n                            this.callDeleteLockRefreshToken(res.Token);\r\n                            res.Token = '';\r\n                        } else {\r\n                            this.toastrService.error('Checksum client invalid. Please login again!');\r\n                            setTimeout(() => {\r\n                                window.localStorage.removeItem(Constants.TokenKey);\r\n                            }, 2000);\r\n                        }\r\n                    }\r\n                    window.localStorage.removeItem(Constants.RetryCount401);\r\n                    return res;\r\n                }),\r\n                catchError((error) => this.handleError(error))\r\n            );\r\n    }\r\n\r\n    public doPostFileMulti(route, fileToUpload: FileList): Observable<any> {\r\n        const authorizationKey = Constants.TokenKey;\r\n        const token = window.localStorage.getItem(authorizationKey);\r\n        const formData: FormData = new FormData();\r\n        for (let i = 0; i < fileToUpload.length; i++) {\r\n            formData.append(fileToUpload[i].name, fileToUpload[i]);\r\n        }\r\n        const httpOptions = {\r\n            headers: new HttpHeaders({\r\n                Authorization: token\r\n            })\r\n        };\r\n        return this.http\r\n            .post<any>(route, formData, httpOptions)\r\n            .pipe(\r\n                map(res => {\r\n                    if (res != null && res.RefreshToken && res.RefreshToken === true) {\r\n                        // xử lý lưu thêm checksumClient = username để phòng server lỗi trả ra token của user khác\r\n                        if (this.validChecksumClient(res.Token)) {\r\n                            window.localStorage.setItem(Constants.TokenKey, res.Token);\r\n                            this.callDeleteLockRefreshToken(res.Token);\r\n                            res.Token = '';\r\n                        } else {\r\n                            this.toastrService.error('Checksum client invalid. Please login again!');\r\n                            setTimeout(() => {\r\n                                window.localStorage.removeItem(Constants.TokenKey);\r\n                            }, 2000);\r\n                        }\r\n                    }\r\n                    window.localStorage.removeItem(Constants.RetryCount401);\r\n                    return res;\r\n                }),\r\n                catchError((error) => this.handleError(error))\r\n            );\r\n    }\r\n\r\n    public doGet(route, params = null, isShowLoading = true): Observable<any> {\r\n        if (isShowLoading) {\r\n            this.spinner.show();\r\n        }\r\n        const authorizationKey = Constants.TokenKey;\r\n        const token = window.localStorage.getItem(authorizationKey);\r\n        if (token === null || token.length <= 0 || JwtHelper.isExpired(token)) {\r\n            if (isShowLoading) {\r\n                this.spinner.hide();\r\n            }\r\n            this.doRedirectLogin();\r\n            return new Observable<any>();\r\n        }\r\n        /*if (params !== null) {\r\n            params = this.buildQueryStrings(params);\r\n        }*/\r\n        const httpOptions = {\r\n            headers: new HttpHeaders({\r\n                'Content-Type': 'application/json',\r\n                Authorization: token\r\n            }),\r\n            params: params\r\n        };\r\n\r\n        return this.http.get<any>(route, httpOptions).pipe(\r\n            map(res => {\r\n                if (isShowLoading) {\r\n                    this.spinner.hide();\r\n                }\r\n                if (res != null && res.RefreshToken && res.RefreshToken === true) {\r\n                    // xử lý lưu thêm checksumClient = username để phòng server lỗi trả ra token của user khác\r\n                    if (this.validChecksumClient(res.Token)) {\r\n                        window.localStorage.setItem(Constants.TokenKey, res.Token);\r\n                        this.callDeleteLockRefreshToken(res.Token);\r\n                        res.Token = '';\r\n                    } else {\r\n                        this.toastrService.error('Checksum client invalid. Please login again!');\r\n                        setTimeout(() => {\r\n                            window.localStorage.removeItem(Constants.TokenKey);\r\n                        }, 2000);\r\n                    }\r\n                }\r\n                window.localStorage.removeItem(Constants.RetryCount401);\r\n                return res;\r\n            }),\r\n            catchError((error) => this.handleError(error))\r\n        );\r\n    }\r\n\r\n    public handleError(error: HttpErrorResponse) {\r\n        this.spinner.hide();\r\n        if (error.error instanceof ErrorEvent) {\r\n            // A client-side or network error occurred. Handle it accordingly.\r\n            console.error('An error occurred:', error.error.message);\r\n        } else {\r\n            // The backend returned an unsuccessful response code.\r\n            // The response body may contain clues as to what went wrong,\r\n            const err =\r\n                `Backend returned code ${error.status}, ` + `body was: ${error.message}`;\r\n            console.error(err);\r\n        }\r\n        if (error.status === 401) { this.doRedirectLogin(); }\r\n        if (error.status === 405) { this.doRedirect405(); }\r\n        // return an observable with a user-facing error message\r\n        return throwError('Something bad happened; please try again later.');\r\n    }\r\n\r\n    public doRedirectLogin(isLogout = false) {\r\n        window.localStorage.removeItem(Constants.TokenKey);\r\n        const isNotSSO = window.localStorage.getItem(Constants.IsNotSSO);\r\n        if (environment.loginSSO === true && !isLogout && (isNotSSO === null || isNotSSO === '0')) {\r\n            window.localStorage.setItem(Constants.ReturnUrl, this.router.url);\r\n            window.location.href = environment.loginUrl + '?returnUrl=' + environment.CLIENT_URL;\r\n            return;\r\n        }\r\n\r\n        this.router.navigate(['/login'], {\r\n            queryParams: { returnUrl: this.router.url }\r\n        });\r\n    }\r\n\r\n    public doRedirect405() {\r\n        this.router.navigate(['/405']).then(e => {\r\n            if (e) {\r\n                console.log('Navigation is successful!');\r\n            } else {\r\n                console.log('Navigation has failed!');\r\n            }\r\n        });\r\n    }\r\n\r\n    private buildQueryParams(source: Object): HttpParams {\r\n        let target: HttpParams = new HttpParams();\r\n        Object.keys(source).forEach((key: string) => {\r\n            const value: string | number | boolean | Date = source[key];\r\n            if ((typeof value !== 'undefined') && (value !== null)) {\r\n                target = target.append(key, value.toString());\r\n            }\r\n        });\r\n        return target;\r\n    }\r\n\r\n    private buildQueryStrings(source: Object) {\r\n        let params = new HttpParams();\r\n        //let target = '';\r\n        //let isFirst = true;\r\n        Object.keys(source).forEach((key: string) => {\r\n            const value: string | number | boolean | Date = source[key];\r\n            params.append(key, value.toString());\r\n            // if ((typeof value !== 'undefined') && (value !== null)) {\r\n            //     target += (isFirst ? '?' : '&') + key + '=' + value.toString();\r\n            // }\r\n            // isFirst = false;\r\n        });\r\n        //return target;\r\n        return params;\r\n    }\r\n\r\n    private callDeleteLockRefreshToken(token: string) {\r\n        const httpOptions = {\r\n            headers: new HttpHeaders({\r\n                'Content-Type': 'application/json'\r\n            })\r\n        };\r\n        const model = new ChecksumKeyModel();\r\n        model.Token = token;\r\n        const route = environment.API_URL + '/user/deletelockrefreshtoken';\r\n        console.log(route);\r\n        this.http.post<any>(route, JSON.stringify(model), httpOptions).pipe(\r\n            map(res => {\r\n                //         console.log(res);\r\n            }),\r\n            catchError((error) => this.handleError(error))\r\n        ).subscribe();\r\n    }\r\n}\r\n\r\nexport class ChecksumKeyModel {\r\n    public Token: string;\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable()\r\nexport class MessageService {\r\n  messages: string[] = [];\r\n\r\n  add(message: string) {\r\n    this.messages.push(message);\r\n  }\r\n\r\n  clear() {\r\n    this.messages = [];\r\n  }\r\n}\r\n","import { Component, Output, EventEmitter, ViewChild } from '@angular/core';\r\nimport { ModalDirective } from 'ngx-bootstrap/modal';\r\n\r\n@Component({\r\n    selector: 'ng-modal-dialog',\r\n    templateUrl: 'custom-modal.component.html'\r\n})\r\nexport class CustomModalComponent {\r\n    @ViewChild('primaryModal') public primaryModal: ModalDirective;\r\n    @Output() onConfirm = new EventEmitter<object>();\r\n\r\n    modalTitle = \"Xác nhận\";\r\n    modalContent = \"\";\r\n    modelActionType = 0;\r\n    data: any;\r\n\r\n    public showConfirm(modalTitle: string, modalContent: string, modelActionType: number, data: any) {\r\n        this.modalTitle = modalTitle;\r\n        this.modalContent = modalContent;\r\n        this.modelActionType = modelActionType;\r\n        this.data = data;\r\n        this.primaryModal.show();\r\n    }\r\n\r\n    doConfirm(): void {\r\n        this.onConfirm.emit(this.data);\r\n        this.primaryModal.hide();\r\n    }\r\n    //   @ViewChild('myModal') public myModal: ModalDirective;\r\n    //   @ViewChild('largeModal') public largeModal: ModalDirective;\r\n    //   @ViewChild('smallModal') public smallModal: ModalDirective;\r\n    //   @ViewChild('primaryModal') public primaryModal: ModalDirective;\r\n    //   @ViewChild('successModal') public successModal: ModalDirective;\r\n    //   @ViewChild('warningModal') public warningModal: ModalDirective;\r\n    //   @ViewChild('dangerModal') public dangerModal: ModalDirective;\r\n    //   @ViewChild('infoModal') public infoModal: ModalDirective;\r\n}\r\n","<div bsModal #primaryModal=\"bs-modal\" class=\"modal fade\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myModalLabel\" aria-hidden=\"true\">\r\n    <div class=\"modal-dialog modal-primary\" role=\"document\">\r\n        <div class=\"modal-content\">\r\n            <div class=\"modal-header\">\r\n                <h4 class=\"modal-title\">{{modalTitle}}</h4>\r\n                <button type=\"button\" class=\"close\" (click)=\"primaryModal.hide()\" aria-label=\"Close\">\r\n                    <span aria-hidden=\"true\">&times;</span>\r\n                </button>\r\n            </div>\r\n            <div class=\"modal-body\">\r\n                <p>{{modalContent}}</p>\r\n            </div>\r\n            <div class=\"modal-footer\">\r\n                <button type=\"button\" class=\"btn btn-secondary\" (click)=\"primaryModal.hide()\">Close</button>\r\n                <button type=\"button\" class=\"btn btn-primary\" (click)=\"doConfirm()\">OK</button>\r\n            </div>\r\n        </div><!-- /.modal-content -->\r\n    </div><!-- /.modal-dialog -->\r\n</div><!-- /.modal -->\r\n","import { Component, Input, TemplateRef } from '@angular/core';\r\n//import { ngxLoadingAnimationTypes } from 'ngx-loading';\r\nimport { UserLoginModel } from '../../models/AdminUserModel';\r\nimport { AuthService } from '../../services/auth.service';\r\nimport { Title } from '@angular/platform-browser';\r\nimport { environment } from 'src/environments/environment';\r\nimport { Constants } from '../../utils/constants';\r\nconst PrimaryWhite = '#ffffff';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\n\r\n@Component({\r\n    selector: 'app-dashboard',\r\n    templateUrl: 'login.component.html'\r\n})\r\nexport class LoginComponent {\r\n    @Input() _userLoginModel: UserLoginModel;\r\n    public loadingTemplate: TemplateRef<any>;\r\n    public primaryColour = PrimaryWhite;\r\n\r\n    constructor(private authService: AuthService, private titleService: Title,  private router: Router) {\r\n        this.titleService.setTitle(`Login - ${environment.APP_TITLE}`);\r\n        this._userLoginModel = new UserLoginModel();\r\n    }\r\n\r\n    public login() {\r\n        this.authService.doLogin(this._userLoginModel).subscribe();\r\n    }\r\n}\r\n","<div class=\"app-body\">\r\n    <main class=\"main d-flex align-items-center\">\r\n      <div class=\"container\">\r\n        <div class=\"row\">\r\n          <div class=\"col-md-8 mx-auto\">\r\n            <div class=\"card-group\">\r\n              <div class=\"card p-4\">\r\n                <div class=\"card-body\">\r\n                  <form (ngSubmit)=\"login()\" #loginForm=\"ngForm\">\r\n                    <h1>LeadsPlatform</h1>\r\n                    <p class=\"text-muted\">Sử dụng tài khoản đăng nhập</p>\r\n                    <div class=\"input-group mb-3\">\r\n                      <div class=\"input-group-prepend\">\r\n                        <span class=\"input-group-text\"><i class=\"icon-user\"></i></span>\r\n                      </div>\r\n                      <input type=\"text\" class=\"form-control\" placeholder=\"Tài khoản\" autocomplete=\"username\" required\r\n                        name=\"UserName\" [(ngModel)]=\"_userLoginModel.username\" maxlength=\"50\">\r\n                    </div>\r\n                    <div class=\"input-group mb-4\">\r\n                      <div class=\"input-group-prepend\">\r\n                        <span class=\"input-group-text\"><i class=\"icon-lock\"></i></span>\r\n                      </div>\r\n                      <input type=\"password\" class=\"form-control\" placeholder=\"Mật khẩu\" autocomplete=\"current-password\"\r\n                        required name=\"Password\" [(ngModel)]=\"_userLoginModel.password\" maxlength=\"50\">\r\n                    </div>\r\n                    <div class=\"row\">\r\n                      <div class=\"col-6\">\r\n                        <button type=\"submit\" class=\"btn btn-primary px-4\" [disabled]=\"!loginForm.form.valid\">Đăng\r\n                          nhập</button>\r\n                      </div>\r\n                      <!-- <div class=\"col-6 text-right\">\r\n                        <button type=\"button\" class=\"btn btn-link px-0\">Forgot password?</button>\r\n                      </div> -->\r\n                    </div>\r\n                    <!--<ngx-loading [show]=\"authService.loading\"\r\n                    [config]=\"{animationType: ngxLoadingAnimationTypes.wanderingCubes, primaryColour: primaryColour, backdropBorderRadius: '3px'}\"\r\n                    [template]=\"loadingTemplate\"></ngx-loading>-->\r\n                  </form>\r\n                </div>\r\n              </div>\r\n              <div class=\"card text-white bg-primary py-5 d-md-down-none\" style=\"width:44%\">\r\n                <div class=\"card-body text-center\">\r\n                  <div>\r\n                    <h2>Leads Managerment Platform</h2>\r\n                    <p>Hệ thống quản lý lead APVN</p>\r\n                    <!-- <button type=\"button\" class=\"btn btn-primary active mt-3\">Register Now!</button> -->\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </main>\r\n  </div>\r\n  \r\n  <ngx-spinner bdColor=\"rgba(0, 0, 0, 0.8)\" size=\"medium\" color=\"#fff\" type=\"ball-clip-rotate\" [fullScreen]=\"true\">\r\n  </ngx-spinner>","import { HttpService } from './http.service';\r\nimport { Observable } from 'rxjs';\r\nimport { ResponseData } from '../models/ResponseData';\r\nimport { Injectable } from '@angular/core';\r\nimport { environment } from 'src/environments/environment';\r\nimport { LeadsManagermentModel } from '../models/leadsmanagerment-model';\r\nimport { Campaign } from '../models/Campaign';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class LeadsmanagermentService {\r\n\r\n    constructor(private httpService: HttpService) {\r\n    }\r\n\r\n    addLead(lead: LeadsManagermentModel): Observable<ResponseData> {\r\n        return this.httpService.doPost(environment.API_URL + '/LeadsManagerment/save', lead);\r\n    }\r\n\r\n    getToEdit(leadId: number): Observable<ResponseData> {\r\n        return this.httpService.doGet(environment.API_URL + '/LeadsManagerment/getbyid/' + leadId);\r\n    }\r\n\r\n    update(leadModel: LeadsManagermentModel) {\r\n        return this.httpService.doPost(environment.API_URL + '/LeadsManagerment/edit', leadModel);\r\n    }\r\n    /**\r\n     * Get form filter\r\n     * \r\n     */\r\n    getFormFilter() {\r\n        return this.httpService.doPost(\r\n            environment.API_URL + '/leadsmanagerment/get-form-filter'\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Get search main list\r\n     * \r\n     */\r\n    search(model) {\r\n        return this.httpService.doPost(\r\n            environment.API_URL + '/leadsmanagerment/get-main-list',\r\n            model\r\n        );\r\n    }\r\n\r\n    /**\r\n    * Get form create\r\n    * \r\n    */\r\n    getFormCreate() {\r\n        return this.httpService.doPost(environment.API_URL + '/leadsmanagerment/get-form-create');\r\n    }\r\n    getallCampaign(){\r\n        return this.httpService.doGet(environment.API_URL + '/leadsmanagerment/get-all-campaign');\r\n    }\r\n    saveCampaign(campaign: Campaign ){\r\n        return this.httpService.doGet(environment.API_URL + '/leadsmanagerment/save-campaign',campaign);\r\n    }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { HttpClientModule } from '@angular/common/http';\r\n\r\n// Routing\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { UserRoutingModule } from './user-routing.module';\r\nimport { UserEditComponent } from './user-edit.component';\r\nimport { UserListComponent } from './user-list.component';\r\nimport { CustomModalModule } from '../modal/custom-modal.module';\r\nimport { NgSelectModule } from '@ng-select/ng-select';\r\nimport { UserPermissionComponent } from './user-permission/user-permission.component';\r\nimport { UserPermissionCreateComponent } from './user-permission-create/user-permission-create.component';\r\nimport { PaginationModule } from 'ngx-bootstrap/pagination';\r\nimport { UserChangePasswordComponent } from './user-change-password/user-change-password.component';\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule,\r\n        UserRoutingModule,\r\n        HttpClientModule,\r\n        PaginationModule.forRoot(),\r\n        FormsModule,\r\n        CustomModalModule,\r\n        ReactiveFormsModule,\r\n        NgSelectModule\r\n    ],\r\n    declarations: [\r\n        UserListComponent,\r\n        UserEditComponent,\r\n        UserPermissionComponent,\r\n        UserPermissionCreateComponent,\r\n        UserChangePasswordComponent\r\n    ]\r\n})\r\nexport class UserModule { }\r\n","export enum ResponseCode {\r\n    Error= 0,\r\n    Success= 1,\r\n    Warning = 2,\r\n    NotLogIn = 3,\r\n    NotPermitted = 4,\r\n    DataOutOfDate = 5\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router, NavigationEnd } from '@angular/router';\r\n\r\n@Component({\r\n  // tslint:disable-next-line\r\n  selector: 'body',\r\n  template: '<router-outlet></router-outlet>',\r\n  styleUrls: ['app.component.css']\r\n})\r\nexport class AppComponent implements OnInit {\r\n  constructor(private router: Router) { }\r\n\r\n  ngOnInit() {\r\n    this.router.events.subscribe((evt) => {\r\n      if (!(evt instanceof NavigationEnd)) {\r\n        return;\r\n      }\r\n      window.scrollTo(0, 0);\r\n    });\r\n  }\r\n}\r\n","import { Component, OnInit, ViewChild, NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { CustomModalComponent } from '../../modal/custom-modal.component';\r\nimport { GroupRole, ResponseData } from '../../../models/ResponseData';\r\nimport { ResponseCode } from 'src/app/utils/enums/responseCode.enum';\r\nimport { LeadsmanagermentService } from '../../../services/leadsmanagerment.service';\r\nimport { LeadsFilterModel } from 'src/app/models/leads-filter-model';\r\nimport { LeadsManagermentModel } from 'src/app/models/leadsmanagerment-model';\r\nimport { HelperFormat } from 'src/app/utils/helpers/helper';\r\nimport { FormControl } from '@angular/forms';\r\n\r\n@Component({\r\n    selector: 'app-leadsmanagerment-list',\r\n    templateUrl: './leadsmanagerment-list.component.html',\r\n    styleUrls: ['./leadsmanagerment-list.component.css'],\r\n    providers: [LeadsmanagermentService]\r\n})\r\n\r\nexport class LeadsmanagermentListComponent implements OnInit {\r\n    /** \r\n     * PROPERTY\r\n     */\r\n    @ViewChild('modalDialog') modalDialog: CustomModalComponent;\r\n    list: LeadsManagermentModel[];\r\n    filterModel = new LeadsFilterModel();\r\n    dealerList = [];\r\n    leadStatusList: [];\r\n    makeList: [];\r\n    modelList: [];\r\n    cityList: [];\r\n    secondHandList: [];\r\n    userList: [];\r\n    campaignList: [];\r\n    sourceLeadsList: [];\r\n    boxLeadsList: [];\r\n    bankList: [];\r\n    paymentStatusList: [];\r\n    isErrFromDate = false;\r\n    isErrToDate = false;\r\n    IsSelectAll = false;\r\n    TotalRecord = 0;\r\n\r\n    /**\r\n     * Construct\r\n     * \r\n     * @param leadsmanagermentService ts\r\n     * @param toastr ts\r\n     * @param router ts\r\n     */\r\n    constructor(private leadsmanagermentService: LeadsmanagermentService,\r\n        private toastr: ToastrService,\r\n        private router: Router) { \r\n            // this.filterModel = new LeadsFilterModel();\r\n            // this.dealerList = [];\r\n            // this.makeList = [];\r\n            // this.modelList = [];\r\n            // this.cityList = [];\r\n            // this.secondHandList = [];\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.getList(1);\r\n        this.getFormFilter();\r\n    }\r\n\r\n    /**\r\n     * GET LIST ALL\r\n     * \r\n     * @param pageIndex number\r\n     */\r\n    getList(pageIndex: number): void {\r\n        // if(this.filterModel.KeyWord == null) this.filterModel.KeyWord = '';\r\n        // this.filterModel.pageIndex = pageIndex;\r\n        // Thêm service lấy list ở đây\r\n        this.leadsmanagermentService.search(this.filterModel).subscribe( res => {\r\n            if(res != null && res.code == 1) {\r\n                this.list = res.data.list;\r\n                // this.TotalRecord = res.data.Page.TotalRecord;\r\n                this.filterModel.pageIndex = res.data.page.pageIndex;\r\n                this.filterModel.pageSize = res.data.page.pageSize;\r\n                this.filterModel.totalRecord = res.data.page.totalRecord;\r\n            }\r\n            else {\r\n                this.toastr.error(\"Có lỗi khi thực thi\");\r\n            }\r\n        });\r\n    }\r\n\r\n    getListNotFilter(pageIndex : number){\r\n        this.getList(pageIndex);\r\n    }\r\n\r\n    /**\r\n     * GET LIST FORM FILTER\r\n     * \r\n     * @param null \r\n     */\r\n    getFormFilter(){\r\n        this.leadsmanagermentService.getFormFilter().subscribe( (res) => {\r\n            if(res != null && res.code == 1) {\r\n                this.dealerList = res.data.dealerList;\r\n                this.makeList = res.data.makeList;\r\n                this.modelList = res.data.modelList;\r\n                this.cityList = res.data.cityList;\r\n                this.secondHandList = res.data.secondHandList;\r\n                this.userList = res.data.userList;\r\n                this.leadStatusList = res.data.leadStatusList;\r\n                this.campaignList = res.data.campaignList;\r\n                this.sourceLeadsList = res.data.sourceLeadsList;\r\n                this.boxLeadsList = res.data.boxLeadsList;\r\n                this.bankList = res.data.bankList;\r\n                this.paymentStatusList = res.data.paymentStatusList;\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * GET DETAIL\r\n     * \r\n     * @param id Id leads\r\n     */\r\n    getById(id: number){\r\n        \r\n    }\r\n\r\n    /**\r\n     * COMMON FUNCTION\r\n     * \r\n     * @param event this\r\n     */\r\n    pageChange(event) {\r\n        this.filterModel.pageIndex = event;\r\n        this.getList(this.filterModel.pageIndex);\r\n    }\r\n\r\n    onChangeCreateToDate(event) {\r\n        if (event.target.value && event.target.value != '' && !HelperFormat.checkformatdatehmm(event.target.value)) {\r\n            this.isErrToDate = true;\r\n        } else {\r\n            this.isErrToDate = false;\r\n        }\r\n    }\r\n\r\n    onChangeCreateFromDate(event) {\r\n        if (event.target.value && event.target.value != '' && !HelperFormat.checkformatdatehmm(event.target.value)) {\r\n            this.isErrFromDate = true;\r\n        } else {\r\n            this.isErrFromDate = false;\r\n        }\r\n    }\r\n\r\n    selectAll(event) {\r\n        \r\n    }\r\n\r\n}\r\n","<div class=\"container-fluid\">\r\n    <div class=\"animated fadeIn\">\r\n        <div class=\"row\">\r\n            <div class=\"col-md-12 col-lg-12\">\r\n                <div class=\"card\">\r\n                    <div class=\"card-header\">\r\n                        Search\r\n                    </div>\r\n                    <div class=\"card-body\">\r\n                        <form #searchForm=\"ngForm\" autocomplete=\"off\">\r\n                            <div class=\"form-group\">\r\n                                <div class=\"row\">\r\n                                    <div class=\"col-md-3 col-lg-3\">\r\n                                        <input type=\"text\" class=\"form-control\" placeholder=\"Nhập SĐT, Họ tên, Email lead\" [(ngModel)]=\"filterModel.KeyWord\" name=\"KeyWord\" />\r\n                                    </div>\r\n                                    <div class=\"col-md-3 col-lg-3\">\r\n                                        <input type=\"text\" class=\"form-control\" placeholder=\"Nhập dealer name\" [(ngModel)]=\"filterModel.DealerName\" name=\"DealerName\" />\r\n                                    </div>\r\n                                    <div class=\"col-md-3 col-lg-3\">\r\n                                        <input class=\"form-control\" [owlDateTime]=\"dt1\" [owlDateTimeTrigger]=\"dt1\" placeholder=\"Ngày đăng kí\" (change)=\"onChangeCreateFromDate($event)\" [(ngModel)]=\"filterModel.CreatedDate\" name=\"CreatedDate\" [selectMode]=\"'range'\">\r\n                                        <owl-date-time #dt1 [pickerType]=\"'calendar'\"></owl-date-time>\r\n                                    </div>\r\n                                    <div class=\"col-md-3 col-lg-3\">\r\n                                        <input class=\"form-control\" [owlDateTime]=\"dt2\" [owlDateTimeTrigger]=\"dt2\" placeholder=\"Ngày chăm sóc\" (change)=\"onChangeCreateFromDate($event)\" [(ngModel)]=\"filterModel.StartCareDate\" name=\"StartCareDate\" [selectMode]=\"'range'\">\r\n                                        <owl-date-time #dt2 [pickerType]=\"'calendar'\"></owl-date-time>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"form-group\">\r\n                                <div class=\"row\">\r\n                                    <div class=\"col-md-3 col-lg-3\">\r\n                                        <ng-select [items]=\"makeList\" bindLabel=\"makeName\" bindValue=\"makeID\"\r\n                                            [(ngModel)]=\"filterModel.MakeId\" name=\"MakeId\" placeholder=\"--Hãng xe--\">\r\n                                        </ng-select>\r\n                                    </div>\r\n                                    <div class=\"col-md-3 col-lg-3\">\r\n                                        <ng-select [items]=\"modelList\" bindLabel=\"modelName\" bindValue=\"modelID\"\r\n                                            [(ngModel)]=\"filterModel.ModelId\" name=\"ModelId\" placeholder=\"--Dòng xe--\">\r\n                                        </ng-select>\r\n                                    </div>\r\n                                    <div class=\"col-md-3 col-lg-3\">\r\n                                        <ng-select [items]=\"secondHandList\" bindLabel=\"secoundHandName\" bindValue=\"secoundHandId\"\r\n                                            [(ngModel)]=\"filterModel.SecoundHand\" name=\"SecoundHand\" placeholder=\"--Tình trạng xe--\">\r\n                                        </ng-select>\r\n                                    </div>\r\n                                    <div class=\"col-md-3 col-lg-3\">\r\n                                        <ng-select [items]=\"cityList\" bindLabel=\"cityName\" bindValue=\"cityID\"\r\n                                            [(ngModel)]=\"filterModel.CityId\" name=\"CityId\" placeholder=\"--Tỉnh thành--\">\r\n                                        </ng-select>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"form-group\">\r\n                                <div class=\"row\">\r\n                                    <div class=\"col-md-3 col-lg-3\">\r\n                                        <ng-select [items]=\"userList\" bindLabel=\"userName\" bindValue=\"userId\"\r\n                                            [(ngModel)]=\"filterModel.AssignToId\" name=\"AssignToId\" placeholder=\"--Giao cho--\">\r\n                                        </ng-select>\r\n                                    </div>\r\n                                    <div class=\"col-md-3 col-lg-3\">\r\n                                        <ng-select [items]=\"leadStatusList\" bindLabel=\"Value\" bindValue=\"Key\"\r\n                                            [(ngModel)]=\"filterModel.IsActive\" name=\"IsActive\" placeholder=\"--Tình trạng leads--\">\r\n                                        </ng-select>\r\n                                    </div>\r\n                                    <div class=\"col-md-3 col-lg-3\">\r\n                                        <ng-select [items]=\"campaignList\" bindLabel=\"name\" bindValue=\"id\"\r\n                                            [(ngModel)]=\"filterModel.CampaignType\" name=\"CampaignType\" placeholder=\"--Campaign--\">\r\n                                        </ng-select>\r\n                                    </div>\r\n                                    <div class=\"col-md-3 col-lg-3\">\r\n                                        <ng-select [items]=\"sourceLeadsList\" bindLabel=\"Value\" bindValue=\"Key\"\r\n                                            [(ngModel)]=\"filterModel.SourceLead\" name=\"SourceLead\" placeholder=\"--Nguồn--\">\r\n                                        </ng-select>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"form-group\">\r\n                                <div class=\"row\">\r\n                                    <div class=\"col-md-3 col-lg-3\">\r\n                                        <ng-select [items]=\"boxLeadsList\" bindLabel=\"Value\" bindValue=\"Key\"\r\n                                            [(ngModel)]=\"filterModel.BoxLeads\" name=\"BoxLeads\" placeholder=\"--Box thu leads--\">\r\n                                        </ng-select>\r\n                                    </div>\r\n                                    <div class=\"col-md-3 col-lg-3\">\r\n                                        <ng-select [items]=\"bankList\" bindLabel=\"name\" bindValue=\"id\"\r\n                                            [(ngModel)]=\"filterModel.Bank\" name=\"Bank\" placeholder=\"--Ngân hàng--\">\r\n                                        </ng-select>\r\n                                    </div>\r\n                                    <div class=\"col-md-3 col-lg-3\">\r\n                                        <ng-select [items]=\"paymentStatusList\" bindLabel=\"Value\" bindValue=\"Key\"\r\n                                            [(ngModel)]=\"filterModel.PaymentStatus\" name=\"PaymentStatus\" placeholder=\"--Hình thức thanh toán--\">\r\n                                        </ng-select>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"form-group\">\r\n                                <div class=\"d-flex justify-content-end\">\r\n                                    <div class=\"p-2\"><button class=\"btn btn-block btn-success\" type=\"button\" (click)=\"getList(1)\"><i class=\"icon-magnifier\"></i> Tìm kiếm</button></div>\r\n                                    <div class=\"p-2\"><button class=\"btn btn-block btn-success\" type=\"button\" (click)=\"getListNotFilter(1)\"><i class=\"icon-refresh\"></i> Làm mới</button></div>\r\n                                </div>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n    \r\n            <div class=\"col-md-12 col-lg-12\">\r\n                <div class=\"card\">\r\n                    <div class=\"card-header\">\r\n                        <i class=\"fa fa-align-justify\"></i> <b>DANH SÁCH</b>\r\n                        <a [routerLink]=\"['/leadsmanagerment/edit']\" aria-pressed=\"true\" class=\"btn btn-square btn-primary active pull-right\" type=\"button\"><i class=\"icon-plus\"></i> Thêm người dùng</a>\r\n                    </div>\r\n                    <div class=\"card-body\">\r\n                        \r\n                        <div class=\"row\"  style=\"margin-top:10px;\">\r\n                            <div class=\"col-md-12 mb-4\">\r\n                                <table class=\"table table-responsive table-striped\">\r\n                                    <thead>\r\n                                        <tr>\r\n                                            <th>Thông tin leads</th>\r\n                                            <th>Thông tin xe</th>\r\n                                            <th>Campaign</th>\r\n                                            <th>Ngày đăng ký</th>\r\n                                            <th>Ngày cập nhật</th>\r\n                                            <th>Ngày chăm sóc</th>\r\n                                            <th>Trạng thái</th>\r\n                                            <th>Nguồn</th>\r\n                                            <th>Giao cho</th>\r\n                                            <th>Box thu lead</th>\r\n                                            <th>Thao tác</th>\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                        <tr *ngFor=\"\r\n                                            let item of list | paginate : { itemsPerPage: filterModel.pageSize, currentPage: filterModel.pageIndex, totalItems: filterModel.totalRecord }\r\n                                        \">\r\n                                            <td class=\"align-middle\">\r\n                                                <p class=\"text-inline\">{{item.fullName}}</p>\r\n                                                <p class=\"text-inline\">{{item.email}}</p>\r\n                                                <p class=\"text-inline\">{{item.mobile}}</p>\r\n                                            </td>\r\n                                            <td class=\"align-middle\">\r\n                                                <p class=\"text-inline\">Hãng: <b>{{item.makeName}}</b></p>\r\n                                                <p class=\"text-inline\">Dòng: <b>{{item.modelName}}</b></p>\r\n                                                <p class=\"text-inline\">Tình trạng xe: <b>{{item.secondHandStr}}</b></p>\r\n                                            </td>\r\n                                            <td class=\"align-middle\">\r\n                                                <p>{{item.campName}}</p>\r\n                                            </td>\r\n                                            <td class=\"align-middle\">\r\n                                                <p>{{item.createdDateName}}</p>\r\n                                            </td>\r\n                                            <td class=\"align-middle\">\r\n                                                <p>{{item.lastModifiedDateName}}</p>\r\n                                            </td>\r\n                                            <td class=\"align-middle\">\r\n                                                <p>{{item.startCareDateName}}</p>\r\n                                            </td>\r\n                                            <td class=\"align-middle\">\r\n                                                <p class=\"text-inline\">{{item.statusName}}</p>\r\n                                            </td>\r\n                                            <td class=\"align-middle\">\r\n                                                <p>{{item.sourceLeadName}}</p>\r\n                                            </td>\r\n                                            <td class=\"align-middle\">\r\n                                                <p>{{item.userName}}</p>\r\n                                            </td>\r\n                                            <td class=\"align-middle\">\r\n                                                <p>{{item.leadsBoxStr}}</p>\r\n                                            </td>\r\n                                            <td class=\"align-middle\">\r\n                                                <a [routerLink]=\"['/leadsmanagerment/get-detail/'+item.id]\" class=\"btn btn-sm btn-warning icon-eye\"></a>\r\n                                            </td>\r\n                                        </tr>\r\n                                    </tbody>\r\n                                </table>\r\n                            </div>\r\n                        </div>\r\n                        \r\n                    </div>\r\n                    <div class=\"card-foot\">\r\n                        <pagination-controls class=\"pagination-md\" (pageChange)=\"pageChange($event)\"\r\n                            maxSize=\"10\" directionLinks=\"true\" responsive=\"true\"\r\n                            previousLabel=\"Previous\" nextLabel=\"Next\" screenReaderPaginationLabel=\"Pagination\"\r\n                            screenReaderPageLabel=\"page\" screenReaderCurrentLabel=\"You're on page\">\r\n                        </pagination-controls>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n","import { LeadsManagermentResult } from './leadsmanagerment-search-result';\r\nimport { DatePipe } from '@angular/common';\r\n\r\nexport class LeadsFilterModel {\r\n    KeyWord: string;\r\n    DealerName: string;\r\n    CreatedDate: Array<Date>;\r\n    StartCareDate: Array<Date>;\r\n    MakeId: number;\r\n    ModelId: number;\r\n    SecoundHand: number;\r\n    CityId: number;\r\n    AssignToId: number;\r\n    IsActive: number;\r\n    CampaignType: number;\r\n    SourceLead: number;\r\n    Status: number;\r\n    BoxLeads: number;\r\n    Bank: number;\r\n    PaymentStatus: number;\r\n\r\n    pageIndex: number;\r\n    CreateFromDate: DatePipe;\r\n    pageSize: number = 10;\r\n    // result: LeadsManagermentResult[];\r\n    totalRecord: number;\r\n}","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { HttpClientModule } from '@angular/common/http';\r\n\r\n// Routing\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { CustomModalModule } from '../modal/custom-modal.module';\r\nimport { NgSelectModule } from '@ng-select/ng-select';\r\nimport { PaginationModule } from 'ngx-bootstrap/pagination';\r\nimport { LeadsmanagermentRoutingModule } from './leadsmanagerment-routing.module';\r\nimport { LeadsmanagermentListComponent } from './leadsmanagerment-list/leadsmanagerment-list.component';\r\nimport { LeadsmanagermentAddLeadComponent } from './leadsmanagerment-add-lead/leadsmanagerment-add-lead.component'\r\nimport { NgxMatDatetimePickerModule, NgxMatTimepickerModule, MatDatetimePickerInputEvent } from '@angular-material-components/datetime-picker';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport {MAT_FORM_FIELD_DEFAULT_OPTIONS} from '@angular/material/form-field';\r\nimport {MatNativeDateModule} from '@angular/material/core';\r\nimport { OwlDateTimeModule, OwlNativeDateTimeModule } from 'ng-pick-datetime';\r\nimport {NgxPaginationModule} from 'ngx-pagination';\r\nimport { LeadsmanagermentDetailComponent } from './leadsmanagerment-detail/leadsmanagerment-detail.component';\r\nimport { CampaignComponent } from './campaign/campaign.component'; // <-- import the module\r\n\r\n@NgModule({\r\n    declarations: [\r\n        LeadsmanagermentListComponent,\r\n        LeadsmanagermentDetailComponent,\r\n        LeadsmanagermentAddLeadComponent,\r\n        CampaignComponent\r\n    ],\r\n    entryComponents: [LeadsmanagermentListComponent, LeadsmanagermentDetailComponent],\r\n    bootstrap: [LeadsmanagermentListComponent, LeadsmanagermentDetailComponent],\r\n    providers: [\r\n        { provide: MAT_FORM_FIELD_DEFAULT_OPTIONS, useValue: { appearance: 'fill' } },\r\n    ],\r\n    imports: [\r\n        CommonModule,\r\n        LeadsmanagermentRoutingModule,\r\n        HttpClientModule,\r\n        PaginationModule.forRoot(),\r\n        FormsModule,\r\n        CustomModalModule,\r\n        ReactiveFormsModule,\r\n        NgSelectModule,\r\n        MatDatepickerModule,\r\n        MatInputModule,\r\n        MatNativeDateModule,\r\n        OwlDateTimeModule, \r\n        OwlNativeDateTimeModule,\r\n        NgxPaginationModule\r\n    ]\r\n})\r\nexport class LeadsmanagermentModule { \r\n    \r\n}\r\n","\r\nexport class HelperFormat {\r\n\r\n    constructor() { }\r\n\r\n    public static checkformatphone(inputVal: string): boolean {\r\n        var regexMobile1 = /^0[1-9][0-9]{8,9}$/;\r\n        var regexMobile2 = /^84[0-9]{8,9}$/;\r\n        if (!regexMobile1.test(inputVal) && !regexMobile2.test(inputVal)) {\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n    public static formatNumber(obj: number, value = -1) {\r\n        if (obj === undefined || obj === null || obj.toString() === '0' || obj.toString() === 'NaN') {\r\n            return value != undefined && value >= 0 ? value.toString() : '';\r\n        }\r\n\r\n        return obj.toString().replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1,');\r\n    }\r\n    public static formatNumber2(obj: number, value = -1) {\r\n        if (obj === undefined || obj === null || obj.toString() === 'NaN') {\r\n            return value != undefined && value >= 0 ? value.toString() : '';\r\n        }\r\n\r\n        return obj.toString().replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1,');\r\n    }\r\n    public static getNumberFromString(obj: string, defaultReturn = 0) {\r\n        if (obj === undefined || obj === '') {\r\n            return defaultReturn;\r\n        }\r\n\r\n        obj = obj.toString().replace(/[^0-9]+/gi, '');\r\n        return parseInt(obj.toString(), 10);\r\n    }\r\n    public static checkformatdate(value) {\r\n        if (/^(0[1-9]|1\\d|2\\d|3[01])\\/(0[1-9]|1[0-2])\\/(19|20)\\d{2}$/.test(value)) {\r\n            return true;\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    }\r\n    public static checkformatdatehmm(value) {\r\n        if (/^([1-9]|([012][0-9])|(3[01]))\\/([0]{0,1}[1-9]|1[012])\\/\\d\\d\\d\\d( )+[012]{0,1}[0-9]:[0-6][0-9]$/.test(value)) {\r\n            return true;\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    }\r\n    public static Validate(x: string) {\r\n        if (x == null || x == undefined || x.trim() == '')\r\n            return true;\r\n        else\r\n            return false;\r\n    }\r\n    public static formatDateToString(date) {\r\n        var year = date.getFullYear().toString();\r\n        var month = (date.getMonth() + 101).toString().substring(1);\r\n        var day = (date.getDate() + 100).toString().substring(1);\r\n        return year + \"-\" + month + \"-\" + day;\r\n    }\r\n\r\n}","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\r\nimport { LocationStrategy, /*HashLocationStrategy, */PathLocationStrategy } from '@angular/common';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { HttpErrorHandler } from './http-error-handler.service';\r\nimport { MessageService } from './message.service';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { PerfectScrollbarModule } from 'ngx-perfect-scrollbar';\r\nimport { PerfectScrollbarConfigInterface } from 'ngx-perfect-scrollbar';\r\nimport { ToastrModule } from 'ngx-toastr';\r\nimport { NgxSpinnerModule } from \"ngx-spinner\";\r\n//import { NotifierModule, NotifierOptions } from 'angular-notifier';\r\n\r\nconst DEFAULT_PERFECT_SCROLLBAR_CONFIG: PerfectScrollbarConfigInterface = {\r\n    suppressScrollX: true\r\n};\r\n\r\nimport { AppComponent } from './app.component';\r\n\r\n// Import containers\r\nimport { DefaultLayoutComponent } from './containers';\r\n\r\nimport { P404Component } from './views/error/404.component';\r\nimport { P500Component } from './views/error/500.component';\r\nimport { LoginComponent } from './views/login/login.component';\r\n//import { RegisterComponent } from './views/register/register.component';\r\n\r\nconst APP_CONTAINERS = [\r\n    DefaultLayoutComponent\r\n];\r\n\r\nimport {\r\n    AppAsideModule,\r\n    AppBreadcrumbModule,\r\n    AppHeaderModule,\r\n    AppFooterModule,\r\n    AppSidebarModule,\r\n} from '@coreui/angular';\r\n\r\n// Import routing module\r\nimport { AppRoutingModule } from './app.routing';\r\n\r\n// Import 3rd party components\r\nimport { BsDropdownModule } from 'ngx-bootstrap/dropdown';\r\nimport { TabsModule } from 'ngx-bootstrap/tabs';\r\n//import { ChartsModule } from 'ng2-charts';\r\nimport { NgxPaginationModule } from 'ngx-pagination';\r\nimport { UserModule } from './views/user/user.module';\r\nimport { LeadsmanagermentModule } from './views/leadsmanagerment/leadsmanagerment.module';\r\n\r\n@NgModule({\r\n    imports: [\r\n        BrowserModule,\r\n        BrowserAnimationsModule,\r\n        AppRoutingModule,\r\n        AppAsideModule,\r\n        AppBreadcrumbModule.forRoot(),\r\n        AppFooterModule,\r\n        AppHeaderModule,\r\n        AppSidebarModule,\r\n        PerfectScrollbarModule,\r\n        BsDropdownModule.forRoot(),\r\n        TabsModule.forRoot(),\r\n        //ChartsModule,\r\n        HttpClientModule,\r\n        FormsModule,\r\n        ToastrModule.forRoot({\r\n            timeOut: 2000,\r\n            positionClass: 'toast-top-right',\r\n            preventDuplicates: true,\r\n        }),\r\n        NgxSpinnerModule,\r\n        //NotifierModule.withConfig(customNotifierOptions),\r\n        //NgxLoadingModule.forRoot({})\r\n        HttpClientModule,\r\n        NgxPaginationModule,\r\n        UserModule,\r\n        LeadsmanagermentModule\r\n    ],\r\n    declarations: [\r\n        AppComponent,\r\n        ...APP_CONTAINERS,\r\n        P404Component,\r\n        P500Component,\r\n        LoginComponent,\r\n        //RegisterComponent\r\n    ],\r\n    providers: [\r\n        HttpErrorHandler,\r\n        MessageService,\r\n        {\r\n            provide: LocationStrategy,\r\n            //useClass: HashLocationStrategy\r\n            useClass: PathLocationStrategy\r\n        }\r\n    ],\r\n    bootstrap: [AppComponent],\r\n    schemas: [CUSTOM_ELEMENTS_SCHEMA],\r\n})\r\nexport class AppModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\n// Import Containers\r\nimport { DefaultLayoutComponent } from './containers';\r\n\r\nimport { P404Component } from './views/error/404.component';\r\nimport { P500Component } from './views/error/500.component';\r\nimport { LoginComponent } from './views/login/login.component';\r\nimport { DailyWorkTimeIndexComponent } from './views/daily-work-time/daily-work-time-index.component';\r\n//import { RegisterComponent } from './views/register/register.component';\r\n\r\nexport const routes: Routes = [\r\n    /*{\r\n        path: '',\r\n        redirectTo: 'dashboard',\r\n        pathMatch: 'full',\r\n    },*/\r\n    {\r\n        path: '404',\r\n        component: P404Component,\r\n        data: {\r\n            title: 'Page 404'\r\n        }\r\n    },\r\n    {\r\n        path: '500',\r\n        component: P500Component,\r\n        data: {\r\n            title: 'Page 500'\r\n        }\r\n    },\r\n    {\r\n        path: 'login',\r\n        component: LoginComponent,\r\n        data: {\r\n            title: 'Login Page'\r\n        }\r\n    },\r\n    /*{\r\n        path: 'register',\r\n        component: RegisterComponent,\r\n        data: {\r\n            title: 'Register Page'\r\n        }\r\n    },*/\r\n    {\r\n        path: '',\r\n        component: DefaultLayoutComponent,\r\n        data: {\r\n            title: 'Home'\r\n        },\r\n        children: [\r\n            {\r\n                path: 'base',\r\n                loadChildren: () => import('./views/base/base.module').then(m => m.BaseModule)\r\n            },\r\n            {\r\n                path: 'buttons',\r\n                loadChildren: () => import('./views/buttons/buttons.module').then(m => m.ButtonsModule)\r\n            },\r\n            {\r\n                path: 'charts',\r\n                loadChildren: () => import('./views/chartjs/chartjs.module').then(m => m.ChartJSModule)\r\n            },\r\n            {\r\n                path: 'dashboard',\r\n                loadChildren: () => import('./views/dashboard/dashboard.module').then(m => m.DashboardModule)\r\n            },\r\n            {\r\n                path: 'icons',\r\n                loadChildren: () => import('./views/icons/icons.module').then(m => m.IconsModule)\r\n            },\r\n            {\r\n                path: 'notifications',\r\n                loadChildren: () => import('./views/notifications/notifications.module').then(m => m.NotificationsModule)\r\n            },\r\n            {\r\n                path: 'theme',\r\n                loadChildren: () => import('./views/theme/theme.module').then(m => m.ThemeModule)\r\n            },\r\n            {\r\n                path: 'widgets',\r\n                loadChildren: () => import('./views/widgets/widgets.module').then(m => m.WidgetsModule)\r\n            },\r\n            {\r\n                path: 'daily-work-time',\r\n                loadChildren: () => import('./views/daily-work-time/daily-work-time.module').then(m => m.DailyWorkTimeModule)\r\n            },\r\n            {\r\n                path: 'shift-exchange-employee',\r\n                loadChildren: () => import('./views/shift-exchange-employee/shift-exchange-employee.module').then(m => m.ShiftExchangeEmployeeModule)\r\n            },\r\n            {\r\n                path: 'user',\r\n                loadChildren: () => import('./views/user/user.module').then(m => m.UserModule)\r\n            },\r\n            {\r\n                path: 'leadsmanagerment',\r\n                loadChildren: () => import('./views/leadsmanagerment/leadsmanagerment.module').then(m => m.LeadsmanagermentModule)\r\n            }\r\n        ]\r\n    },\r\n    // {\r\n    //     path: 'user',\r\n    //     component: DefaultLayoutComponent,\r\n    //     data: {\r\n    //         title: 'User'\r\n    //     },\r\n    //     loadChildren: () => import('./views/user/user.module').then(m => m.UserModule)\r\n    // },\r\n    // {\r\n    //     path: 'daily-work-time',\r\n    //     component: DailyWorkTimeIndexComponent,\r\n    //     data: {\r\n    //         title: 'Chấm công'\r\n    //     },\r\n    //     loadChildren: () => import('./views/daily-work-time/daily-work-time.module').then(m => m.DailyWorkTimeModule)\r\n    // },\r\n    { path: '**', component: P404Component }\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forRoot(routes)],\r\n    exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { INavData } from '@coreui/angular';\r\nimport { SystemRole } from './utils/enums/system-role.enum';\r\n\r\nexport const navItems: INavData[] = [\r\n    {\r\n        title: true,\r\n        name: 'System'\r\n    },\r\n    {\r\n        name: 'Người dùng',\r\n        url: '/user',\r\n        icon: 'fa fa-user-o',\r\n        children: [\r\n            {\r\n                name: 'Danh sách',\r\n                url: '/user/list',\r\n                icon: 'fa fa-list'\r\n            }\r\n        ],\r\n        attributes: { role: SystemRole.Admin }\r\n    },\r\n    {\r\n        name: 'Thông tin nhân viên',\r\n        url: '/daily-work-time',\r\n        icon: 'fa fa-user-o',\r\n        children: [\r\n            {\r\n                name: 'Thiết lập thời gian làm việc',\r\n                url: '/shift-exchange-employee',\r\n                icon: 'fa fa-edit'\r\n            },\r\n            {\r\n                name: 'Thông tin chấm công',\r\n                url: '/daily-work-time',\r\n                icon: 'fa fa-list'\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        name: 'Quản lý lead',\r\n        icon: 'icon-speedometer',\r\n        children: [\r\n            {\r\n                name: 'Danh sách lead',\r\n                url: '/leadsmanagerment/list',\r\n                icon: 'fa fa-list'\r\n            },\r\n            {\r\n                name: 'Chỉnh sửa lead',\r\n                url: '/leadsmanagerment/updateLead/20',\r\n                icon: 'fa fa-edit'\r\n            },\r\n            {\r\n                name: 'Thêm lead',\r\n                url: '/leadsmanagerment/addLead',\r\n                icon: 'fa fa-plus'\r\n            },\r\n            {\r\n                name: 'Quản lý campaign',\r\n                url: '/leadsmanagerment/campaign',\r\n                icon: 'fa fa-book'\r\n            }\r\n        ]\r\n    },\r\n    // ,\r\n    // {\r\n    //     title: true,\r\n    //     name: 'Theme'\r\n    // },\r\n    // {\r\n    //     name: 'Colors',\r\n    //     url: '/theme/colors',\r\n    //     icon: 'icon-drop'\r\n    // },\r\n    // {\r\n    //     name: 'Typography',\r\n    //     url: '/theme/typography',\r\n    //     icon: 'icon-pencil'\r\n    // },\r\n    // {\r\n    //     title: true,\r\n    //     name: 'Components'\r\n    // },\r\n    // {\r\n    //     name: 'Base',\r\n    //     url: '/base',\r\n    //     icon: 'icon-puzzle',\r\n    //     children: [\r\n    //         {\r\n    //             name: 'Cards',\r\n    //             url: '/base/cards',\r\n    //             icon: 'icon-puzzle'\r\n    //         },\r\n    //         {\r\n    //             name: 'Carousels',\r\n    //             url: '/base/carousels',\r\n    //             icon: 'icon-puzzle'\r\n    //         },\r\n    //         {\r\n    //             name: 'Collapses',\r\n    //             url: '/base/collapses',\r\n    //             icon: 'icon-puzzle'\r\n    //         },\r\n    //         {\r\n    //             name: 'Forms',\r\n    //             url: '/base/forms',\r\n    //             icon: 'icon-puzzle'\r\n    //         },\r\n    //         {\r\n    //             name: 'Navbars',\r\n    //             url: '/base/navbars',\r\n    //             icon: 'icon-puzzle'\r\n\r\n    //         },\r\n    //         {\r\n    //             name: 'Pagination',\r\n    //             url: '/base/paginations',\r\n    //             icon: 'icon-puzzle'\r\n    //         },\r\n    //         {\r\n    //             name: 'Popovers',\r\n    //             url: '/base/popovers',\r\n    //             icon: 'icon-puzzle'\r\n    //         },\r\n    //         {\r\n    //             name: 'Progress',\r\n    //             url: '/base/progress',\r\n    //             icon: 'icon-puzzle'\r\n    //         },\r\n    //         {\r\n    //             name: 'Switches',\r\n    //             url: '/base/switches',\r\n    //             icon: 'icon-puzzle'\r\n    //         },\r\n    //         {\r\n    //             name: 'Tables',\r\n    //             url: '/base/tables',\r\n    //             icon: 'icon-puzzle'\r\n    //         },\r\n    //         {\r\n    //             name: 'Tabs',\r\n    //             url: '/base/tabs',\r\n    //             icon: 'icon-puzzle'\r\n    //         },\r\n    //         {\r\n    //             name: 'Tooltips',\r\n    //             url: '/base/tooltips',\r\n    //             icon: 'icon-puzzle'\r\n    //         }\r\n    //     ]\r\n    // },\r\n    // {\r\n    //     name: 'Buttons',\r\n    //     url: '/buttons',\r\n    //     icon: 'icon-cursor',\r\n    //     children: [\r\n    //         {\r\n    //             name: 'Buttons',\r\n    //             url: '/buttons/buttons',\r\n    //             icon: 'icon-cursor'\r\n    //         },\r\n    //         {\r\n    //             name: 'Dropdowns',\r\n    //             url: '/buttons/dropdowns',\r\n    //             icon: 'icon-cursor'\r\n    //         },\r\n    //         {\r\n    //             name: 'Brand Buttons',\r\n    //             url: '/buttons/brand-buttons',\r\n    //             icon: 'icon-cursor'\r\n    //         }\r\n    //     ]\r\n    // },\r\n    // {\r\n    //     name: 'Charts',\r\n    //     url: '/charts',\r\n    //     icon: 'icon-pie-chart'\r\n    // },\r\n    // {\r\n    //     name: 'Icons',\r\n    //     url: '/icons',\r\n    //     icon: 'icon-star',\r\n    //     children: [\r\n    //         {\r\n    //             name: 'CoreUI Icons',\r\n    //             url: '/icons/coreui-icons',\r\n    //             icon: 'icon-star',\r\n    //             badge: {\r\n    //                 variant: 'success',\r\n    //                 text: 'NEW'\r\n    //             }\r\n    //         },\r\n    //         {\r\n    //             name: 'Flags',\r\n    //             url: '/icons/flags',\r\n    //             icon: 'icon-star'\r\n    //         },\r\n    //         {\r\n    //             name: 'Font Awesome',\r\n    //             url: '/icons/font-awesome',\r\n    //             icon: 'icon-star',\r\n    //             badge: {\r\n    //                 variant: 'secondary',\r\n    //                 text: '4.7'\r\n    //             }\r\n    //         },\r\n    //         {\r\n    //             name: 'Simple Line Icons',\r\n    //             url: '/icons/simple-line-icons',\r\n    //             icon: 'icon-star'\r\n    //         }\r\n    //     ]\r\n    // },\r\n    // {\r\n    //     name: 'Notifications',\r\n    //     url: '/notifications',\r\n    //     icon: 'icon-bell',\r\n    //     children: [\r\n    //         {\r\n    //             name: 'Alerts',\r\n    //             url: '/notifications/alerts',\r\n    //             icon: 'icon-bell'\r\n    //         },\r\n    //         {\r\n    //             name: 'Badges',\r\n    //             url: '/notifications/badges',\r\n    //             icon: 'icon-bell'\r\n    //         },\r\n    //         {\r\n    //             name: 'Modals',\r\n    //             url: '/notifications/modals',\r\n    //             icon: 'icon-bell'\r\n    //         }\r\n    //     ]\r\n    // },\r\n    // {\r\n    //     name: 'Widgets',\r\n    //     url: '/widgets',\r\n    //     icon: 'icon-calculator',\r\n    //     badge: {\r\n    //         variant: 'info',\r\n    //         text: 'NEW'\r\n    //     }\r\n    // },\r\n    // {\r\n    //     divider: true\r\n    // },\r\n    // {\r\n    //     title: true,\r\n    //     name: 'Extras',\r\n    // },\r\n    // {\r\n    //     name: 'Pages',\r\n    //     url: '/pages',\r\n    //     icon: 'icon-star',\r\n    //     children: [\r\n    //         {\r\n    //             name: 'Login',\r\n    //             url: '/login',\r\n    //             icon: 'icon-star'\r\n    //         },\r\n    //         {\r\n    //             name: 'Register',\r\n    //             url: '/register',\r\n    //             icon: 'icon-star'\r\n    //         },\r\n    //         {\r\n    //             name: 'Error 404',\r\n    //             url: '/404',\r\n    //             icon: 'icon-star'\r\n    //         },\r\n    //         {\r\n    //             name: 'Error 500',\r\n    //             url: '/500',\r\n    //             icon: 'icon-star'\r\n    //         }\r\n    //     ]\r\n    // },\r\n    // {\r\n    //     name: 'Disabled',\r\n    //     url: '/dashboard',\r\n    //     icon: 'icon-ban',\r\n    //     badge: {\r\n    //         variant: 'secondary',\r\n    //         text: 'NEW'\r\n    //     },\r\n    //     attributes: { disabled: true },\r\n    // },\r\n    // {\r\n    //     name: 'Download CoreUI',\r\n    //     url: 'http://coreui.io/angular/',\r\n    //     icon: 'icon-cloud-download',\r\n    //     class: 'mt-auto',\r\n    //     variant: 'success',\r\n    //     attributes: { target: '_blank', rel: 'noopener' }\r\n    // },\r\n    // {\r\n    //     name: 'Try CoreUI PRO',\r\n    //     url: 'http://coreui.io/pro/angular/',\r\n    //     icon: 'icon-layers',\r\n    //     variant: 'danger',\r\n    //     attributes: { target: '_blank', rel: 'noopener' }\r\n    // }\r\n];\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  templateUrl: '500.component.html'\r\n})\r\nexport class P500Component {\r\n\r\n  constructor() { }\r\n\r\n}\r\n","<div class=\"app flex-row align-items-center\">\r\n  <div class=\"container\">\r\n    <div class=\"row justify-content-center\">\r\n      <div class=\"col-md-6\">\r\n        <div class=\"clearfix\">\r\n          <h1 class=\"float-left display-3 mr-4\">500</h1>\r\n          <h4 class=\"pt-3\">Houston, we have a problem!</h4>\r\n          <p class=\"text-muted\">The page you are looking for is temporarily unavailable.</p>\r\n        </div>\r\n        <div class=\"input-prepend input-group\">\r\n          <div class=\"input-group-prepend\">\r\n            <span class=\"input-group-text\"><i class=\"fa fa-search\"></i></span>\r\n          </div>\r\n          <input id=\"prependedInput\" class=\"form-control\" size=\"16\" type=\"text\" placeholder=\"What are you looking for?\">\r\n          <span class=\"input-group-append\">\r\n            <button class=\"btn btn-info\" type=\"button\">Search</button>\r\n          </span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { UserService } from '../../services/user.service';\r\nimport { AdminUserModel } from '../../models/AdminUserModel';\r\nimport { FormGroup, Validators, FormBuilder } from '@angular/forms';\r\nimport { MatchValidator } from '../../utils/helpers/match.validator';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { AuthService } from '../../services/auth.service';\r\nimport { ResponseData } from '../../models/ResponseData';\r\nimport { ResponseCode } from 'src/app/utils/enums/responseCode.enum';\r\n\r\n@Component({\r\n    selector: 'app-user-edit',\r\n    templateUrl: 'user-edit.component.html',\r\n    providers: [UserService],\r\n\r\n})\r\n\r\nexport class UserEditComponent implements OnInit {\r\n    userModel: AdminUserModel;\r\n    registerForm: FormGroup;\r\n    submitted = false;\r\n    isAdminRole: boolean;\r\n    editMode: string;\r\n    selectedGroupRoles: [];\r\n    //groupRoles: AdminGroupModel[];\r\n\r\n    constructor(\r\n        private activatedRoute: ActivatedRoute,\r\n        private router: Router,\r\n        private formBuilder: FormBuilder,\r\n        private userService: UserService,\r\n        private toastr: ToastrService\r\n    ) {\r\n        //this.userModel = new AdminUserModel();\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.isAdminRole = AuthService.IsAdminRole;\r\n        const userId = parseInt(this.activatedRoute.snapshot.queryParams['userId']);\r\n        //var userModel = null;\r\n        if (userId > 0) {\r\n            this.editMode = \"Update\";\r\n            // Khởi tạo form với trường hợp edit\r\n            this.registerForm = this.formBuilder.group({\r\n                userId: [0],\r\n                username: [{ value: '', disabled: true }, Validators.required],\r\n                password: ['', [Validators.minLength(6), Validators.maxLength(24)]],\r\n                confirmPassword: [''],\r\n                fullname: [''],\r\n                email: ['', [Validators.required]],\r\n                phone: ['', [Validators.required]],\r\n                description: [''],\r\n                isAdminGroup: [false],\r\n                groups: '',\r\n                status: [0, Validators.required]\r\n            }, {\r\n                validator: MatchValidator('password', 'confirmPassword')\r\n            });\r\n            this.userService.getToEdit(userId).subscribe(response => {\r\n                if (response.success) {\r\n                    this.loadForm(response.data);\r\n                } else {\r\n                    this.toastr.error(\"UserId không hợp lệ\");\r\n                    this.router.navigate(['/user/list']);\r\n                }\r\n            }, error => { this.toastr.error(error); this.router.navigate(['/user/list']); });\r\n        }\r\n        else {\r\n            this.editMode = \"Add\";\r\n            // Khởi tạo form với trường hợp Add\r\n            this.registerForm = this.formBuilder.group({\r\n                userId: [0],\r\n                username: ['', Validators.required],\r\n                password: ['', [Validators.required, Validators.minLength(6), Validators.maxLength(24)]],\r\n                confirmPassword: ['', Validators.required],\r\n                fullname: [''],\r\n                email: ['', [Validators.required]],\r\n                phone: ['', [Validators.required]],\r\n                description: [''],\r\n                isAdminGroup: [false],\r\n                groups: '',\r\n                status: [0, Validators.required]\r\n            }, {\r\n                validator: MatchValidator('password', 'confirmPassword')\r\n            });\r\n        }\r\n        this.userService.getGroupRoles().subscribe(response => {\r\n            const res = response as ResponseData;\r\n            if (res && res.code == ResponseCode.Success) {\r\n                // this.groupRoles = res.data as AdminGroupModel[];\r\n            } else {\r\n                this.toastr.error(\"UserId không hợp lệ\");\r\n                this.router.navigate(['/user/list']);\r\n            }\r\n        }, error => { this.toastr.error(error); this.router.navigate(['/user/list']); });\r\n    }\r\n    loadForm(userModel: AdminUserModel) {\r\n        this.registerForm.patchValue({\r\n            userId: userModel.userId,\r\n            username: userModel.username,\r\n            //password: userModel.password,\r\n            //confirmPassword: userModel.confirmPassword,\r\n            fullname: userModel.fullname,\r\n            email: userModel.email,\r\n            phone: userModel.phone,\r\n            description: userModel.description,\r\n            isAdminGroup: userModel.isAdminGroup,\r\n            groups: userModel.groups === '' ? [] : userModel.groups.split(',').map(Number),\r\n            status: userModel.status\r\n        });\r\n    }\r\n\r\n    // convenience getter for easy access to form fields\r\n    get f() { return this.registerForm.controls; }\r\n\r\n    onSubmit() {\r\n        this.submitted = true;\r\n        // stop here if form is invalid\r\n        if (this.registerForm.invalid) {\r\n            return;\r\n        }\r\n\r\n        this.userService.update(this.registerForm.getRawValue()).subscribe(response => {\r\n            if (response.success) {\r\n                if (this.registerForm.value.userId === 0) {\r\n                    this.toastr.success(\"Bạn đã thêm tài khoản quản trị thành công.\");\r\n                }\r\n                else {\r\n                    this.toastr.success(\"Bạn đã sửa tài khoản quản trị thành công.\");\r\n                }\r\n                this.router.navigate(['/user/list']);\r\n            } else {\r\n                this.toastr.error(response);\r\n            }\r\n        }, error => { this.toastr.error(error); });\r\n    }\r\n\r\n    onReset() {\r\n        this.submitted = false;\r\n        this.registerForm.reset();\r\n    }\r\n}\r\n","<div class=\"animated fadeIn\">\r\n    <div class=\"row\">\r\n        <div class=\"col-lg-12\">\r\n            <div class=\"card\">\r\n                <div class=\"card-header\">\r\n                    <strong>{{editMode}} User</strong>\r\n                </div>\r\n                <form [formGroup]=\"registerForm\" (ngSubmit)=\"onSubmit()\" method=\"post\" enctype=\"multipart/form-data\" class=\"form-horizontal\">\r\n                    <div class=\"card-body\">\r\n                        <div class=\"form-group row\">\r\n                            <label class=\"col-md-3 col-form-label\">Tên đăng nhập</label>\r\n                            <div class=\"col-md-9\">\r\n                                <!--<p class=\"form-control-static\">Username</p>-->\r\n                                <input type=\"text\" id=\"txtUsername\" name=\"Username\" formControlName=\"username\" class=\"form-control\" placeholder=\"Tên đăng nhập\" maxlength=\"50\" autocomplete=\"off\" [ngClass]=\"{ 'is-invalid': submitted && f.username.errors }\">\r\n                                <div *ngIf=\"submitted && f.username.errors\" class=\"invalid-feedback\">\r\n                                    <div *ngIf=\"f.username.errors.required\">Tên đăng nhập không được để trống.</div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"form-group row\">\r\n                            <label class=\"col-md-3 col-form-label\" for=\"password-input\">Mật khẩu</label>\r\n                            <div class=\"col-md-9\">\r\n                                <input type=\"password\" id=\"txtPassword\" name=\"password-input\" formControlName=\"password\" class=\"form-control\" placeholder=\"Mật khẩu\" maxlength=\"24\" autocomplete=\"off\" [ngClass]=\"{ 'is-invalid': submitted && f.password.errors }\">\r\n                                <div *ngIf=\"submitted && f.password.errors\" class=\"invalid-feedback\">\r\n                                    <div *ngIf=\"f.password.errors.required\">Mật khẩu không được để trống.</div>\r\n                                    <div *ngIf=\"f.password.errors.minlength\">Mật khẩu tối thiểu 6 ký tự</div>\r\n                                    <div *ngIf=\"f.password.errors.maxlength\">Mật khẩu tối đa 24 ký tự</div>\r\n                                </div>\r\n                                <!--<span class=\"help-block\">Please enter a complex password</span>-->\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"form-group row\">\r\n                            <label class=\"col-md-3 col-form-label\" for=\"password-input\">Xác nhận mật khẩu</label>\r\n                            <div class=\"col-md-9\">\r\n                                <input type=\"password\" id=\"txtRePassword\" name=\"re-password-input\" formControlName=\"confirmPassword\" class=\"form-control\" placeholder=\"Xác nhận mật khẩu\" autocomplete=\"off\" maxlength=\"24\" [ngClass]=\"{ 'is-invalid': submitted && f.confirmPassword.errors }\">\r\n                                <div *ngIf=\"submitted && f.confirmPassword.errors\" class=\"invalid-feedback\">\r\n                                    <div *ngIf=\"f.confirmPassword.errors.required\">Xác nhận mật khẩu không được để trống.</div>\r\n                                    <div *ngIf=\"f.confirmPassword.errors.mustMatch\">Xác nhận mật khẩu không khớp</div>\r\n                                </div>\r\n                                <!--<span class=\"help-block\">Please enter a complex password</span>-->\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"form-group row\">\r\n                            <label class=\"col-md-3 col-form-label\" for=\"text-input\">Tên đầy đủ</label>\r\n                            <div class=\"col-md-9\">\r\n                                <input type=\"text\" id=\"txtFullname\" name=\"fullname\" formControlName=\"fullname\" class=\"form-control\" placeholder=\"Tên đầy đủ\">\r\n                                <!--<span class=\"help-block\">This is a help text</span>-->\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"form-group row\">\r\n                            <label class=\"col-md-3 col-form-label\" for=\"email-input\">Email</label>\r\n                            <div class=\"col-md-9\">\r\n                                <input type=\"email\" id=\"email-input\" name=\"Email\" formControlName=\"email\" class=\"form-control\" placeholder=\"Email\" autocomplete=\"email\" [ngClass]=\"{ 'is-invalid': submitted && f.email.errors }\" pattern=\"^[a-z0-9]+([._-][a-z0-9]+)*@([a-z0-9]+)([\\.-_][a-z0-9]+)*\\.[a-z]{2,4}$\">\r\n                                <div *ngIf=\"submitted && f.email.errors\" class=\"invalid-feedback\">\r\n                                    <div *ngIf=\"f.email.errors.required\">Email không được để trống.</div>\r\n                                    <div *ngIf=\"f.email.errors.pattern\">Email không đúng định dạng.</div>\r\n                                </div>\r\n                                <!--<span class=\"help-block\">Please enter your email</span>-->\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"form-group row\">\r\n                            <label class=\"col-md-3 col-form-label\" for=\"email-input\">Số điện thoại</label>\r\n                            <div class=\"col-md-9\">\r\n                                <input type=\"email\" id=\"txtPhone\" name=\"Phone\" formControlName=\"phone\" class=\"form-control\" placeholder=\"Số điện thoại\" autocomplete=\"phone\" [ngClass]=\"{ 'is-invalid': submitted && f.phone.errors }\" pattern=\"^(\\\\+84|0)[93785][0-9]{8}$\">\r\n                                <div *ngIf=\"submitted && f.phone.errors\" class=\"invalid-feedback\">\r\n                                    <div *ngIf=\"f.phone.errors.required\">Số điện thoại không được để trống.</div>\r\n                                    <div *ngIf=\"f.phone.errors.pattern\">Số điện thoại không hợp lệ.</div>\r\n                                </div>\r\n                                <!--<span class=\"help-block\">Please enter your email</span>-->\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"form-group row\">\r\n                            <label class=\"col-md-3 col-form-label\" for=\"textarea-input\">Mô tả</label>\r\n                            <div class=\"col-md-9\">\r\n                                <textarea id=\"txtDescription\" name=\"Description\" formControlName=\"description\" rows=\"9\" class=\"form-control\" placeholder=\"Nội dung\"></textarea>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"form-group row\" *ngIf=\"isAdminRole\">\r\n                            <label class=\"col-md-3 col-form-label\" for=\"textarea-input\">Quyền</label>\r\n                            <div class=\"col-md-9 col-form-label\">\r\n                                <div class=\"form-check\">\r\n                                    <input class=\"form-check-input\" id=\"chkGroupAdmin\" name=\"Is Admin Group\" formControlName=\"isAdminGroup\" type=\"checkbox\" value=\"option1\">\r\n                                    <label class=\"form-check-label\" for=\"chkGroupAdmin\">\r\n                                        Là tài khoản quản trị\r\n                                    </label>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"form-group row\" *ngIf=\"isAdminRole\">\r\n                            <label class=\"col-md-3 col-form-label\" for=\"textarea-input\">Nhóm quyền</label>\r\n                            <div class=\"col-md-9 col-form-label\">\r\n                                <div>\r\n                                    <!-- <ng-select [(ngModel)]=\"selectedGroupRoles\" formControlName=\"groups\" [multiple]=\"true\">\r\n                                        <ng-option *ngFor=\"let groupRole of groupRoles\" [value]=\"groupRole.groupId\">{{groupRole.name}}</ng-option>\r\n                                    </ng-select> -->\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"form-group row\">\r\n                            <label class=\"col-md-3 col-form-label\" for=\"select1\">Trạng thái</label>\r\n                            <div class=\"col-md-9\">\r\n                                <select id=\"select1\" name=\"select1\" class=\"form-control\" formControlName=\"status\" [ngClass]=\"{ 'is-invalid': submitted && f.phone.errors }\">\r\n                                    <option [ngValue]=\"0\">Chưa kích hoạt</option>\r\n                                    <option [ngValue]=\"1\">Kích hoạt</option>\r\n                                </select>\r\n                                <div *ngIf=\"submitted && f.status.errors\" class=\"invalid-feedback\">\r\n                                    <div *ngIf=\"f.status.errors.required\">Chưa chọn trạng thái.</div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <input type=\"hidden\" id=\"txtUserId\" name=\"UserId\" formControlName=\"userId\" class=\"form-control\">\r\n\r\n                    </div>\r\n                    <div class=\"card-footer\">\r\n                        <button type=\"submit\" class=\"btn btn-sm btn-primary\"><i class=\"fa fa-dot-circle-o\"></i> Lưu</button>\r\n                        <button type=\"reset\" class=\"btn btn-sm btn-danger ml-2\"><i class=\"fa fa-ban\"></i> Xóa</button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    </div><!--/.row-->\r\n</div>\r\n","export class ChangePassword {\r\n    constructor() {}\r\n    currentPassword: string;\r\n    newPassword: string;\r\n    confirmNewPassword: string;\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { LeadsmanagermentListComponent } from './leadsmanagerment-list/leadsmanagerment-list.component';\r\nimport { LeadsmanagermentDetailComponent } from './leadsmanagerment-detail/leadsmanagerment-detail.component';\r\nimport { LeadsmanagermentAddLeadComponent } from './leadsmanagerment-add-lead/leadsmanagerment-add-lead.component';\r\nimport { CampaignComponent } from './campaign/campaign.component';\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path: 'list',\r\n        component: LeadsmanagermentListComponent,\r\n        data: {\r\n            title: 'Danh sách Leads'\r\n        }\r\n    },\r\n    {\r\n        path: 'addLead',\r\n        component: LeadsmanagermentAddLeadComponent,\r\n        data: {\r\n            title: 'Thêm Leads'\r\n        }\r\n    },\r\n    {\r\n        path: 'updateLead/:leadId',\r\n        component: LeadsmanagermentAddLeadComponent,\r\n        data: {\r\n            title: 'Update Leads'\r\n        }\r\n    },\r\n    {\r\n        path: 'get-detail/:id',\r\n        component: LeadsmanagermentDetailComponent,\r\n        data: {\r\n            title: 'Chi tiết Leads'\r\n        }\r\n    },\r\n    {\r\n        path: 'campaign',\r\n        component: CampaignComponent,\r\n        data: {\r\n            title: 'Quản lý campaign'\r\n        }\r\n    }\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forChild(routes)],\r\n    exports: [RouterModule]\r\n})\r\nexport class LeadsmanagermentRoutingModule {\r\n\r\n}\r\n","export enum SystemRole {\r\n    Sales = 6,\r\n    Lead = 7,\r\n    Admin = 8,\r\n    Coordinate = 9,\r\n    TeamLeader = 10,\r\n}\r\n","import { NgxSpinnerService } from 'ngx-spinner';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Injectable, Input, ViewChild } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { map, catchError } from 'rxjs/operators';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { environment } from 'src/environments/environment';\r\nimport { UserLoginModel, AdminUserModel } from '../models/AdminUserModel';\r\nimport { ResponseData, GroupRole } from '../models/ResponseData';\r\nimport { Constants } from '../utils/constants';\r\nimport { HttpService } from './http.service';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { JwtHelper } from '../utils/helpers/jwt.helper';\r\nimport { group } from '@angular/animations';\r\nimport { ResponseCode } from '../utils/enums/responseCode.enum';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\n\r\nexport class AuthService {\r\n    constructor(\r\n        private http: HttpClient,\r\n        private httpService: HttpService,\r\n        private toastrService: ToastrService,\r\n        private spinner: NgxSpinnerService,\r\n        private activatedRoute: ActivatedRoute,\r\n        private router: Router\r\n    ) { }\r\n\r\n    public static get IsAuthenticated(): boolean {\r\n        const token = window.localStorage.getItem(Constants.TokenKey);\r\n        if (token && token.length > 0 && !JwtHelper.isExpired(token)) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    public static getGroupRole(): GroupRole {\r\n        const jsonRoles = window.localStorage.getItem(Constants.RolesKey);\r\n        if (jsonRoles) {\r\n            try {\r\n                const roles = JSON.parse(jsonRoles) as GroupRole;\r\n                return roles;\r\n            } catch (ex) {\r\n                console.log(ex);\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    // Check role for normal module\r\n    public checkRole(roleName: string, groupRole: GroupRole): boolean {\r\n        if (groupRole.isAdmin || groupRole.isAdminGroup) return true;\r\n\r\n        return groupRole.roles.indexOf(roleName) !== -1;\r\n    }\r\n\r\n    // Check role and logined in user is owner of object data\r\n    public checkOwnerRole(roleName: string, groupRole: GroupRole, owner: string, loginUserInfo: AdminUserModel): boolean {\r\n        if (groupRole.isAdmin || groupRole.isAdminGroup) return true;\r\n\r\n        return owner === loginUserInfo.username && groupRole.roles.indexOf(roleName) !== -1;\r\n    }\r\n\r\n    // Check role for user module\r\n    public checkRoleInUserModule(roleName: string, currentUser: AdminUserModel, groupRole: GroupRole, loginUserInfo: AdminUserModel): boolean {\r\n        if (roleName === '/user/delete') {\r\n            // Nếu roleName là delete và người bị xóa là admin (isAdmin = true) thì không cho xóa\r\n            if (currentUser.username == Constants.AdminUsername) return false;\r\n            if (currentUser.isAdminGroup) {\r\n                // Chỉ user admin mới được xóa tài khoản thuộc nhóm admin\r\n                return groupRole.isAdmin;\r\n            }\r\n            // Với user thường thì tài khoản admin hoặc tài khoản thuộc nhóm admin được quyền xóa\r\n            if (groupRole.isAdmin || groupRole.isAdminGroup) return true;\r\n            return false;\r\n        }\r\n        if (roleName === '/user/index') return groupRole.isAdmin || groupRole.isAdminGroup;\r\n        if (roleName === '/user/edit') {\r\n            // Tài khoản quản trị có quyền sửa mọi account\r\n            if (groupRole.isAdmin) return true;\r\n            // Nếu là trường hợp thêm mới\r\n            if (currentUser === null) return groupRole.isAdminGroup;\r\n            // Tài khoản admin không ai chỉnh sửa được trừ admin\r\n            if (currentUser.username == Constants.AdminUsername) return false;\r\n            // Nếu tài khoản sửa thuộc nhóm quản trị thì chỉ edit được tài khoản chính chủ\r\n            if (currentUser.isAdminGroup) return currentUser.userId === loginUserInfo.userId;\r\n            // Tài khoản thường thì nhóm admin hoặc chính chủ sửa được\r\n            if (groupRole.isAdminGroup || currentUser.userId === loginUserInfo.userId) return true;\r\n\r\n            return false;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    public static get IsAdminRole(): boolean {\r\n        const token = window.localStorage.getItem(Constants.TokenKey);\r\n        try {\r\n            const decodeToken = JwtHelper.decodeToken(token);\r\n            return decodeToken.unique_name === Constants.AdminUsername;\r\n        } catch (ex) {\r\n            console.log(ex);\r\n        }\r\n        return false;\r\n    }\r\n\r\n    public static getUserInfo(): AdminUserModel {\r\n        const token = window.localStorage.getItem(Constants.TokenKey);\r\n        try {\r\n            const decodeToken = JwtHelper.decodeToken(token);\r\n            const adminUserModel = new AdminUserModel();\r\n            adminUserModel.userId = decodeToken.certserialnumber;\r\n            adminUserModel.username = decodeToken.unique_name;\r\n            adminUserModel.isAdminGroup = decodeToken.isadmingroup;\r\n            return adminUserModel;\r\n        } catch (ex) {\r\n            console.log(ex);\r\n        }\r\n        return null;\r\n    }\r\n\r\n    public doLogin(userLoginModel: UserLoginModel): Observable<ResponseData>  {\r\n        this.spinner.show();\r\n        // xử lý lưu thêm checksumClient = username để phòng server lỗi trả ra token của user khác\r\n        const checksumClient = userLoginModel.username;\r\n        if (checksumClient != null && checksumClient.length > 0) {\r\n            window.localStorage.setItem(Constants.ChecksumClient, checksumClient);\r\n        }\r\n        const httpOptions = {\r\n            withCredentials: true,\r\n            headers: new HttpHeaders({\r\n                'Content-Type': 'application/json charset=utf-8'\r\n            })\r\n        };\r\n        const route = environment.API_URL + '/account/login';\r\n        return this.http.post<any>(route, userLoginModel, httpOptions)\r\n            .pipe( \r\n                map((res: ResponseData) => {\r\n                    this.spinner.hide();\r\n                    // xử lý lưu thêm checksumClient = username để phòng server lỗi trả ra token của user khác\r\n                    if (res !== null && res.code === ResponseCode.Success && res.token !== '') {\r\n                        if (this.httpService.validChecksumClient(res.token)) {\r\n                            window.localStorage.setItem(Constants.TokenKey, res.token);\r\n                            console.log(res.token);\r\n                            this.toastrService.success('Đăng nhập thành công!');\r\n                            let returnUrl = this.activatedRoute.snapshot.queryParams['returnUrl'];\r\n                            if (returnUrl === undefined) {\r\n                                returnUrl = '/';\r\n                            }\r\n                            console.log(returnUrl);\r\n                            this.router.navigateByUrl(returnUrl);\r\n                        } else {\r\n                            this.toastrService.error('Checksum client invalid. Please login again!');\r\n                        }\r\n                    } else {\r\n                        if (res !== null && res.message) {\r\n                            this.toastrService.error(res.message);\r\n                        }\r\n                    }\r\n                    return res;\r\n                }),\r\n                catchError((error) => this.httpService.handleError(error))\r\n            );\r\n    }\r\n\r\n    public doLogout(): Observable<ResponseData> {\r\n        const route = environment.API_URL + '/account/do-logout';\r\n        return this.httpService.doPost(route).pipe(\r\n            map(res => {\r\n                if (res != null && res.code === ResponseCode.Success) {\r\n                    window.localStorage.removeItem(Constants.TokenKey);\r\n                    window.localStorage.removeItem(Constants.RolesKey);\r\n                    window.localStorage.removeItem(Constants.ChecksumClient);\r\n                    this.httpService.doRedirectLogin(true);\r\n                }\r\n                return res;\r\n            }),\r\n            catchError(() => this.httpService.handleError)\r\n        );\r\n    }\r\n}\r\n","import { FormGroup } from '@angular/forms';\r\n\r\n// custom validator to check that two fields match\r\nexport function MatchValidator(controlName: string, matchingControlName: string) {\r\n    return (formGroup: FormGroup) => {\r\n        const control = formGroup.controls[controlName];\r\n        const matchingControl = formGroup.controls[matchingControlName];\r\n\r\n        if (matchingControl.errors && !matchingControl.errors.mustMatch) {\r\n            // return if another validator has already found an error on the matchingControl\r\n            return;\r\n        }\r\n\r\n        // set error on matchingControl if validation fails\r\n        if (control.value !== matchingControl.value) {\r\n            matchingControl.setErrors({ mustMatch: true });\r\n        } else {\r\n            matchingControl.setErrors(null);\r\n        }\r\n    }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule, CUSTOM_ELEMENTS_SCHEMA, NO_ERRORS_SCHEMA } from '@angular/core';\r\nimport { CustomModalComponent } from './custom-modal.component';\r\nimport { ModalModule } from 'ngx-bootstrap/modal';\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule,\r\n        ModalModule.forRoot()\r\n    ],\r\n    exports: [CustomModalComponent],\r\n    declarations: [\r\n        CustomModalComponent\r\n    ],\r\n    schemas: [\r\n        CUSTOM_ELEMENTS_SCHEMA,\r\n        NO_ERRORS_SCHEMA\r\n    ]\r\n})\r\nexport class CustomModalModule {\r\n}\r\n","import { INavData } from '@coreui/angular';\r\nimport { Constants } from '../constants';\r\nimport { SystemRole } from '../enums/system-role.enum';\r\nimport { JwtHelper } from './jwt.helper';\r\n\r\nexport class PermissionHelper {\r\n    public static hasRole(role: number): boolean {\r\n        const currUser = JwtHelper.decodeToken(localStorage.getItem(Constants.TokenKey));\r\n        const roles = currUser.role;\r\n        if(typeof roles ==='undefined' || roles == null) {\r\n            return false;\r\n        }\r\n\r\n        let hasRole = false;\r\n        var arrRoleItem = roles.split(',');\r\n        arrRoleItem.forEach(roleItem => {\r\n            if(roleItem == SystemRole.Admin.toString() || roleItem === role.toString()) {\r\n                hasRole= true;\r\n            }\r\n        });\r\n        return hasRole;\r\n    }\r\n\r\n    public static getMenuItems(menuItems: INavData[]): INavData[] {\r\n        let arr = [];\r\n        menuItems.forEach(els => {\r\n           if(els.attributes != null && els.attributes.role != null) {\r\n               if(els.children != null && els.children.length > 0) {\r\n                   let childArr = [];\r\n                   els.children.forEach(childEls =>{\r\n                    if(childEls.attributes != null && childEls.attributes.role != null) {\r\n                        if(this.hasRole(childEls.attributes.role)) {\r\n                            childArr.push(childEls);\r\n                        }         \r\n                    } else {\r\n                        childArr.push(childEls);\r\n                    }\r\n                   });\r\n                   els.children = childArr;\r\n               }\r\n               if(this.hasRole(els.attributes.role)) {\r\n                arr.push(els);\r\n               }\r\n           } else {\r\n            arr.push(els);\r\n           }\r\n        });\r\n        return arr;\r\n    }\r\n}\r\n","export class  Campaign{\r\n    constructor(){}\r\n    Id: number;\r\n    Name: string;\r\n}","import { HttpService } from './http.service';\r\nimport { Observable } from 'rxjs';\r\nimport { ResponseData } from '../models/ResponseData';\r\nimport { Injectable } from '@angular/core';\r\nimport { environment } from 'src/environments/environment';\r\nimport { UserIndexModel } from '../models/user-index-model';\r\nimport { PermissionInit } from '../models/permission-init';\r\nimport { DepartmentInfo } from '../models/department-info';\r\nimport { PermissionSave } from '../models/permission-save';\r\nimport { ChangePassword } from '../models/change-password';\r\n\r\n@Injectable()\r\nexport class UserService {\r\n    constructor(private httpService: HttpService) {\r\n    }\r\n\r\n    getToEdit(userId: number) {\r\n        return this.httpService.doGet(environment.API_URL + '/user/get-to-edit', { 'userId': userId });\r\n    }\r\n\r\n    getList(params): Observable<ResponseData> {\r\n        return this.httpService.doGet(environment.API_URL + '/user/index', params);\r\n    } \r\n\r\n    update(userModel: any) {\r\n        return this.httpService.doPost(environment.API_URL + '/user/edit', userModel);\r\n    }\r\n\r\n    delete(userId: any) {\r\n        return this.httpService.doPost(environment.API_URL + '/user/delete', { 'userId': userId });\r\n    }\r\n\r\n    getGroupRoles() {\r\n        return this.httpService.doGet(environment.API_URL + '/user/get-group-roles', null, false);\r\n    }\r\n\r\n    search(model: UserIndexModel): Observable<UserIndexModel> {\r\n        return this.httpService.doPost(environment.API_URL + '/user/get-list',model);\r\n    }\r\n    initPermission(userName:string): Observable<PermissionInit> {\r\n        return this.httpService.doGet(environment.API_URL + '/user/init-permission?userName=' + userName);\r\n    }\r\n    deletePermission(id: number): Observable<ResponseData> {\r\n        return this.httpService.doPost(environment.API_URL + '/user/delete-permission/' + id);\r\n    }\r\n    getDepartmentByCityId(cityId: number): Observable<DepartmentInfo>{\r\n        return this.httpService.doGet(environment.API_URL + '/user/get-department/' + cityId);\r\n    }\r\n    save(model: PermissionSave): Observable<ResponseData> {\r\n        return this.httpService.doPost(environment.API_URL + '/user/save',model);\r\n    }\r\n    getPermissionByUserName(userName: string): Observable<ResponseData> {\r\n        return this.httpService.doGet(environment.API_URL + '/user/get-list-permission?userName='+ userName);\r\n    }\r\n    resetPassword(model: ChangePassword): Observable<ResponseData> {\r\n        return this.httpService.doPost(environment.API_URL + '/user/change-password',model);\r\n    }\r\n}\r\n","export class JwtHelper {\r\n    constructor() { }\r\n\r\n    public static decodeToken(token: string = '') {\r\n        if (token === null || token === '') { return { 'upn': '' }; }\r\n        const parts = token.split('.');\r\n        if (parts.length !== 3) {\r\n\r\n            throw new Error('JWT must have 3 parts');\r\n        }\r\n        const decoded = this.urlBase64Decode(parts[1]);\r\n        if (!decoded) {\r\n            throw new Error('Cannot decode the token');\r\n        }\r\n        return JSON.parse(decoded);\r\n    }\r\n\r\n    public static isExpired(token: string) {\r\n        const objToken = this.decodeToken(token);\r\n        return Math.floor((new Date).getTime() / 1000) >= objToken.exp;\r\n    }\r\n\r\n    private static urlBase64Decode(str: string) {\r\n        let output = str.replace(/-/g, '+').replace(/_/g, '/');\r\n        switch (output.length % 4) {\r\n            case 0:\r\n                break;\r\n            case 2:\r\n                output += '==';\r\n                break;\r\n            case 3:\r\n                output += '=';\r\n                break;\r\n            default:\r\n                // tslint:disable-next-line:no-string-throw\r\n                throw 'Illegal base64url string!';\r\n        }\r\n        return decodeURIComponent((<any>window).escape(window.atob(output)));\r\n    }\r\n}\r\n","import { Component, OnInit, OnChanges } from '@angular/core';\r\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\r\nimport { LeadsmanagermentService } from '../../../services/leadsmanagerment.service';\r\nimport { LeadsManagermentModel } from '../../../models/leadsmanagerment-model';\r\nimport { LeadAction } from '../../../models/leadsmanagerment-lead-action';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { from } from 'rxjs';\r\nimport { SystemCode } from 'src/app/models/ResponseData';\r\nimport { UtilityHelper } from 'src/app/utils/helpers/utility-helper';\r\n\r\n@Component({\r\n  selector: 'app-leadsmanagerment-add-lead',\r\n  templateUrl: './leadsmanagerment-add-lead.component.html',\r\n  styleUrls: ['./leadsmanagerment-add-lead.component.css']\r\n})\r\nexport class LeadsmanagermentAddLeadComponent implements OnInit {\r\n\r\n  form: FormGroup;\r\n  formSubmitAttempt: boolean;\r\n  selectChangeCar: boolean;\r\n  modeInsert: boolean;\r\n  leads: LeadsManagermentModel;\r\n  listInfoCar: LeadAction[];\r\n  sources: [];\r\n  listUser: [];\r\n  listCampaign: [];\r\n  listPayment: [];\r\n  cityList: [];\r\n\r\n  lstmake: any[];\r\n  lstmodel: any[];\r\n  lstSecondhand: any[];\r\n  lstLeadActionType: any[];\r\n  constructor(\r\n    private leadService: LeadsmanagermentService,\r\n    private toastr: ToastrService,\r\n    private activatedRoute: ActivatedRoute,\r\n    private router: Router) { }\r\n\r\n  ngOnInit(): void {\r\n    this.leads = new LeadsManagermentModel();\r\n    const leadId = parseInt(this.activatedRoute.snapshot.params['leadId']);\r\n    if(isNaN(leadId)){\r\n      this.modeInsert = true;\r\n    }else{\r\n      this.modeInsert = false;\r\n      this.leadService.getToEdit(leadId).subscribe((res)=>{\r\n        if(res.code === SystemCode.Success){\r\n          let leadModel = UtilityHelper.toPascal(res.data.leadsModel) as LeadsManagermentModel;\r\n          this.leads.Id = leadModel.Id;\r\n          this.selectChangeCar = leadModel.IsChangeCar;\r\n          this.leads.ListAction = leadModel.ListAction;\r\n          this.resetForm(leadModel);\r\n        }\r\n      })\r\n    }\r\n    this.initValue();\r\n  }\r\n\r\n  get f() {\r\n    return this.form.controls;\r\n  }\r\n\r\n  submit() {\r\n    this.formSubmitAttempt = true;\r\n    console.log(\"dataForm:\", this.form.getRawValue());\r\n    this.copyValueFromForm(this.leads, this.form.getRawValue());\r\n    console.log(\"leadModelAction:\", this.leads);\r\n    console.log(this.form);\r\n    if (this.form.valid && this.checkValidateLeadAction(this.leads.ListAction)) {\r\n      this.leadService.addLead(this.leads).subscribe(res => {\r\n        console.log(res);\r\n        if(res.code == SystemCode.Success){\r\n          this.toastr.success(res.message);\r\n          if(!this.modeInsert){\r\n            this.router.navigate(['/leadsmanagerment/list']);\r\n          }\r\n          this.initValue();\r\n        }else{\r\n          this.toastr.error(res.message);\r\n        }\r\n      });\r\n    }\r\n  }\r\n  reset() {\r\n    this.initValue();\r\n  }\r\n\r\n  addHTMLInfoCar() {\r\n    this.formSubmitAttempt = false;\r\n    this.leads.ListAction.push(new LeadAction());\r\n  }\r\n\r\n  removeHTMLInfoCar() {\r\n    this.leads.ListAction.pop();\r\n  }\r\n\r\n  onItemChange() {\r\n    this.selectChangeCar = this.form.value.IsChangeCar;\r\n  }\r\n  private initValue() {\r\n    this.formSubmitAttempt = false;\r\n    this.selectChangeCar = false;\r\n    this.leads.ListAction = [new LeadAction()];\r\n\r\n    this.leadService.getFormCreate().subscribe( (res) => {\r\n      if(res != null) {\r\n          this.cityList = res.cityList;\r\n          this.listPayment = res.lstPaymentStatus;\r\n          this.sources = res.lstSource;\r\n          this.listCampaign = res.lstCampaign;\r\n          this.listUser = res.lstUser;\r\n          this.lstmake = res.lstmake;\r\n          this.lstmodel = res.lstmodel;\r\n          this.lstSecondhand = res.lstSecondhand;\r\n          this.lstLeadActionType = res.lstLeadActionType;\r\n        }\r\n    });\r\n    this.initForm();\r\n  }\r\n\r\n  private initForm(){\r\n    this.form = new FormGroup({\r\n      FullName: new FormControl('', [Validators.required]),\r\n      Mobile: new FormControl('', [Validators.required]),\r\n      Email: new FormControl(),\r\n      CampaignType: new FormControl(1, Validators.required),\r\n      IsChangeCar: new FormControl(false),\r\n      ChangeCarTime: new FormControl(),\r\n      CurrentCar: new FormControl(),\r\n      HasWife: new FormControl(false),\r\n      HasChild: new FormControl(false),\r\n      PaymentStatus: new FormControl(),\r\n      SourceLead: new FormControl(0, [Validators.required, Validators.pattern(\"^[0-9]*$\")]),\r\n      Description: new FormControl(),\r\n      Address: new FormControl(),\r\n      ExpectedDescription: new FormControl(),\r\n      PriceRage: new FormControl(),\r\n      LoanMoney: new FormControl(0, [Validators.pattern(\"^[0-9]*$\")]),\r\n      LoanTime: new FormControl(null, [Validators.pattern(\"^[0-9]*$\")]),\r\n      StableIncome: new FormControl(false),\r\n      Job: new FormControl(),\r\n      Income: new FormControl(0, Validators.pattern(\"^[0-9]*$\")),\r\n      ReasonChangeCar: new FormControl(),\r\n      FamilyIncome: new FormControl(0, Validators.pattern(\"^[0-9]*$\")),\r\n      StartCareDate: new FormControl('', [Validators.required]),\r\n      CityId: new FormControl(0, [Validators.required]),\r\n      AssignToId: new FormControl(),\r\n      GoodAddress: new FormControl(false),\r\n      GoodActionDealer: new FormControl(false),\r\n      LookingOtherCar: new FormControl(false),\r\n      OtherCar: new FormControl(),\r\n      IsSoldCar: new FormControl(false),\r\n      DealerConsider: new FormControl(),\r\n      Note: new FormControl(),\r\n    });\r\n  }\r\n\r\n  private resetForm(value : LeadsManagermentModel){\r\n    this.form.reset({\r\n      FullName: value.FullName,\r\n      Mobile: value.Mobile,\r\n      Email: value.Email,\r\n      CampaignType: value.CampaignType,\r\n      IsChangeCar: value.IsChangeCar,\r\n      ChangeCarTime: new Date(value.ChangeCarTime).toLocaleDateString('en-ZA').replaceAll('/', '-'),\r\n      CurrentCar: value.CurrentCar,\r\n      HasWife: value.HasWife,\r\n      HasChild: value.HasChild,\r\n      PaymentStatus: value.PaymentStatus,\r\n      SourceLead: value.SourceLead,\r\n      Description: value.Description,\r\n      Address: value.Address,\r\n      ExpectedDescription: value.ExpectedDescription,\r\n      PriceRage: value.PriceRage,\r\n      LoanMoney: value.LoanMoney,\r\n      LoanTime: value.LoanTime,\r\n      StableIncome: value.StableIncome,\r\n      Job: value.Job,\r\n      Income: value.Income,\r\n      ReasonChangeCar: value.ReasonChangeCar,\r\n      FamilyIncome: value.FamilyIncome,\r\n      StartCareDate: new Date(value.StartCareDate).toLocaleDateString('en-ZA').replaceAll('/', '-'),\r\n      CityId: value.CityId,\r\n      AssignToId: value.AssignToId,\r\n      GoodAddress: value.GoodAddress,\r\n      GoodActionDealer: value.GoodActionDealer,\r\n      LookingOtherCar: value.LookingOtherCar,\r\n      OtherCar: value.OtherCar,\r\n      IsSoldCar: value.IsSoldCar,\r\n      DealerConsider: value.DealerConsider,\r\n      DealerNote: value.Note,\r\n    })\r\n  }\r\n  private checkValidateLeadAction(lstLeadAction: LeadAction[]):boolean{\r\n\r\n    let result: boolean = true;\r\n    for (const item of lstLeadAction) {\r\n      if(Number(item.MakeId) == 0 || isNaN(Number(item.MakeId))){\r\n        result = false;\r\n        break;\r\n      }\r\n      if(Number(item.ModelId) == 0 || isNaN(Number(item.ModelId))){\r\n        result = false;\r\n        break;\r\n      }\r\n      if(Number(item.SecondHand) == 0 || isNaN(Number(item.SecondHand))){\r\n        result = false;\r\n        break;\r\n      }\r\n    }\r\n    return result;\r\n  }\r\n  private copyValueFromForm(ojbNeedAppend, objAppend){\r\n    var origKey \r\n    for (origKey in objAppend) {\r\n      if (objAppend.hasOwnProperty(origKey)) {\r\n        if(objAppend[origKey] != null){\r\n          ojbNeedAppend[origKey] = objAppend[origKey]\r\n        }\r\n      }\r\n    }\r\n    return ojbNeedAppend;\r\n  }\r\n}\r\n","<div class=\"col-md-12\">\r\n    <div class=\"card\">\r\n      <div class=\"card-header\">\r\n        <strong>Thêm Lead</strong>\r\n      </div>\r\n      <div class=\"card-body\">\r\n        <form [formGroup]=\"form\" (ngSubmit)=\"submit()\">\r\n          <div class=\"form-group row\">\r\n            <label class=\"col-md-1 col-form-label\" for=\"FullName\">Họ Tên<span class=\"text-danger\">*</span></label>\r\n            <div class=\"col-md-3\">\r\n              <input type=\"text\" id=\"FullName\" formControlName=\"FullName\" class=\"form-control\" placeholder=\"Nhập họ tên\">\r\n              <div *ngIf=\"(f.FullName.touched && f.FullName.invalid) || (f.FullName.untouched && formSubmitAttempt)\" class=\"text-danger\">\r\n                <span *ngIf=\"f.FullName?.errors?.required\">Bạn cần nhập họ tên</span>\r\n              </div>\r\n            </div>\r\n\r\n            <label class=\"col-md-1 col-form-label\" for=\"Mobile\">SĐT<span class=\"text-danger\">*</span></label>\r\n            <div class=\"col-md-3\">\r\n              <input type=\"tel\" id=\"Mobile\" formControlName=\"Mobile\" class=\"form-control\" placeholder=\"Nhập số điện thoại\" pattern=\"^(\\\\+84|0)[93785][0-9]{8}$\">\r\n              <div *ngIf=\"(f.Mobile.touched && f.Mobile.invalid) || (f.Mobile.untouched && formSubmitAttempt)\" class=\"text-danger\">\r\n                <span *ngIf=\"f.Mobile?.errors?.required\">Bạn cần nhập số điện thoại</span>\r\n                <div *ngIf=\"f.Mobile?.errors?.pattern\">Số điện thoại không hợp lệ.</div>\r\n              </div>\r\n            </div>\r\n\r\n            <label class=\"col-md-1 col-form-label\" for=\"Email1\">Email</label>\r\n            <div class=\"col-md-3\">\r\n              <input type=\"email\" id=\"Email1\" formControlName=\"Email\" class=\"form-control\" placeholder=\"Nhập email\" autocomplete=\"email\" pattern=\"^[a-z0-9]+([._-][a-z0-9]+)*@([a-z0-9]+)([\\.-_][a-z0-9]+)*\\.[a-z]{2,4}$\">\r\n              <div *ngIf=\"(f.Email.touched && f.Email.invalid)\" class=\"text-danger\">\r\n                  <div *ngIf=\"f.Email?.errors?.pattern\" class=\"text-danger\">Email không đúng định dạng.</div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"form-group row\">\r\n            <label class=\"col-md-1 col-form-label\" for=\"CityId\">Tỉnh Thành<span class=\"text-danger\">*</span></label>\r\n            <div class=\"col-md-3\">\r\n              <!-- <input type=\"number\" id=\"CityId\" formControlName=\"CityId\" class=\"form-control\" placeholder=\"Nhập tỉnh thành\"> -->\r\n              <ng-select id=\"CityId\" [items]=\"cityList\" bindLabel=\"cityName\" bindValue=\"cityID\"\r\n                formControlName=\"CityId\" placeholder=\"--Tỉnh thành--\">\r\n              </ng-select>\r\n              <div *ngIf=\"(f.CityId.touched && f.CityId.invalid) || (f.CityId.untouched && formSubmitAttempt)\" class=\"text-danger\">\r\n                <span *ngIf=\"f.CityId?.errors?.required\">Bạn cần chọn tỉnh thành</span>\r\n              </div>\r\n            </div>\r\n            <label class=\"col-md-1 col-form-label\" for=\"StartCareDate\">Ngày chăm sóc<span class=\"text-danger\">*</span></label>\r\n            <div class=\"col-md-3\">\r\n              <input class=\"form-control\" id=\"StartCareDate\" type=\"date\" formControlName=\"StartCareDate\" placeholder=\"Ngày bắt đầu chăm sóc\">\r\n              <div *ngIf=\"(f.StartCareDate.touched && f.StartCareDate.invalid) || (f.StartCareDate.untouched && formSubmitAttempt)\" class=\"text-danger\">\r\n                <span *ngIf=\"f.StartCareDate?.errors?.required\">Bạn cần chọn ngày chăm sóc</span>\r\n              </div>\r\n            </div>\r\n\r\n            <label class=\"col-md-1 col-form-label\" for=\"CampaignType\">Campaign<span class=\"text-danger\">*</span></label>\r\n            <div class=\"col-md-3\">\r\n              <ng-select id=\"CampaignType\" [items]=\"listCampaign\" bindLabel=\"Name\" bindValue=\"Id\" formControlName=\"CampaignType\" placeholder=\"--Campaign Type--\">\r\n              </ng-select>\r\n              <div *ngIf=\"(f.CampaignType.touched && f.CampaignType.invalid) || (f.CampaignType.untouched && formSubmitAttempt)\" class=\"text-danger\">\r\n                <span *ngIf=\"f.CampaignType?.errors?.required\">Bạn cần chọn Campaign</span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"form-group row\">\r\n            <label class=\"col-md-1 col-form-label\" for=\"textarea-input\">Địa chỉ</label>\r\n            <div class=\"col-md-3\">\r\n              <textarea id=\"textarea-input\" formControlName=\"Address\"  rows=\"3\" class=\"form-control\" placeholder=\"\"></textarea>\r\n            </div>\r\n            <label class=\"col-md-1 col-form-label\" for=\"GoodAddress\">GoodAdress</label>\r\n            <div class=\"col-md-3 col-form-label\">\r\n              <div class=\"form-check form-check-inline\">\r\n                <input class=\"form-check-input\" type=\"checkbox\" id=\"GoodAddress\" formControlName=\"GoodAddress\"/>\r\n              </div>\r\n            </div>\r\n            <label class=\"col-md-1 col-form-label\" for=\"AssignToId\">AsignTo</label>\r\n            <div class=\"col-md-3\">\r\n              <ng-select name=\"ddlStatus\" [items]=\"listUser\" bindLabel=\"userName\" bindValue=\"userId\"\r\n                formControlName=\"AssignToId\" placeholder=\"--Assign--\">\r\n              </ng-select>\r\n            </div>\r\n          </div>\r\n          <div class=\"form-group row\">\r\n            <label class=\"col-md-1 col-form-label\" for=\"PriceRage\">Khoảng giá</label>\r\n            <div class=\"col-md-3\">\r\n              <input id=\"PriceRage\" formControlName=\"PriceRage\" class=\"form-control\" placeholder=\"Nhập khoảng giá\">\r\n              <span class=\"help-block\"></span>\r\n            </div>\r\n            <label class=\"col-md-1 col-form-label\" for=\"LoanMoney\">Khoản vay</label>\r\n            <div class=\"col-md-3\">\r\n              <input type=\"number\" id=\"LoanMoney\" formControlName=\"LoanMoney\" class=\"form-control\" placeholder=\"Nhập khoản vay\">\r\n              <span *ngIf=\"f.LoanMoney?.errors?.pattern\" class=\"text-danger\">Bạn hãy nhập số</span>\r\n            </div>\r\n            <label class=\"col-md-1 col-form-label\" for=\"LoanTime\">Thời hạn vay</label>\r\n            <div class=\"col-md-3\">\r\n              <input type=\"number\" id=\"LoanTime\" formControlName=\"LoanTime\" class=\"form-control\" placeholder=\"Thời hạn vay (tháng)\">\r\n              <span *ngIf=\"f.LoanTime?.errors?.pattern\" class=\"text-danger\">Bạn hãy nhập số</span>\r\n            </div>\r\n          </div>\r\n          <hr>\r\n          <div class=\"form-group row\">\r\n            <label class=\"col-md-6 col-form-label\" for=\"textarea-input\"><b><i>Thông tin xe</i></b></label>\r\n          </div>\r\n          <div *ngFor='let leadAction of leads.ListAction;'>\r\n            <div class=\"form-group row\">\r\n              <label class=\"col-md-1 col-form-label\" for=\"HX\">Hãng xe<span class=\"text-danger\">*</span></label>\r\n              <div class=\"col-md-3\">\r\n                <ng-select id=\"HX\"  [items]=\"lstmake\" bindLabel=\"makeName\" bindValue=\"makeID\" [(ngModel)]=\"leadAction.MakeId\"\r\n                   placeholder=\"-- Hãng Xe --\" [ngModelOptions]=\"{standalone: true}\" >\r\n                </ng-select>\r\n                <div class=\"text-danger\" *ngIf=\"(!(leadAction.MakeId > 0) && formSubmitAttempt)\">\r\n                  <span>Bạn chưa chọn hãng xe</span>\r\n                </div>\r\n              </div>\r\n  \r\n              <label class=\"col-md-1 col-form-label\" for=\"DX\">Dòng xe<span class=\"text-danger\">*</span></label>\r\n              <div class=\"col-md-3\">\r\n                <ng-select id=\"DX\"  [items]=\"lstmodel\" bindLabel=\"modelName\" bindValue=\"modelID\" [(ngModel)]=\"leadAction.ModelId\"\r\n                   placeholder=\"-- Dòng Xe --\" [ngModelOptions]=\"{standalone: true}\">\r\n                </ng-select>\r\n                <div class=\"text-danger\" *ngIf=\"(!(leadAction.ModelId > 0) && formSubmitAttempt)\">\r\n                  <span>Bạn chưa chọn dòng xe</span>\r\n                </div>\r\n              </div>\r\n  \r\n              <label class=\"col-md-1 col-form-label\" for=\"TT\">TT xe<span class=\"text-danger\">*</span></label>\r\n              <div class=\"col-md-3\">\r\n                <ng-select id=\"TT\"  [items]=\"lstSecondhand\" bindLabel=\"Value\" bindValue=\"Key\" [(ngModel)]=\"leadAction.SecondHand\"\r\n                   placeholder=\"-- Tình trạng xe --\" [ngModelOptions]=\"{standalone: true}\">\r\n                </ng-select>\r\n                <div class=\"text-danger\" *ngIf=\"(!(leadAction.SecondHand > 0) && formSubmitAttempt)\">\r\n                  <span>Bạn chưa chọn tình trạng xe</span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"form-group row\">\r\n              <label class=\"col-md-1 col-form-label\" for=\"TT\">Box<span class=\"text-danger\">*</span></label>\r\n              <div class=\"col-md-3\">\r\n                <ng-select id=\"TT\"  [items]=\"lstLeadActionType\" bindLabel=\"Value\" bindValue=\"Key\" [(ngModel)]=\"leadAction.Type\"\r\n                   placeholder=\"-- Box thu lead --\" [ngModelOptions]=\"{standalone: true}\">\r\n                </ng-select>\r\n                <div class=\"text-danger\" *ngIf=\"(!(leadAction.Type > 0) && formSubmitAttempt)\">\r\n                  <span>Bạn chưa chọn box thu lead</span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"form-group row\">\r\n            <div class=\"col-md-2 col-lg-2 col-form-label\">\r\n              <button class=\"btn btn-block btn-success\" (click)=\"addHTMLInfoCar()\" type=\"button\"><i class=\"icon-magnifier-add\"></i> Add Item</button>\r\n            </div>\r\n            <div class=\"col-md-2 col-lg-2 col-form-label\">\r\n              <button type=\"button\" class=\"btn btn-block btn-danger\" (click)=\"removeHTMLInfoCar()\"><i class=\"material-icons-outlined\"></i>Delete Item</button>\r\n            </div>\r\n          </div>\r\n          <hr>\r\n          <div class=\"form-group row\">\r\n            <label class=\"col-md-1 col-form-label\" for=\"textarea-input\">Description</label>\r\n            <div class=\"col-md-3\">\r\n              <textarea id=\"textarea-input\" formControlName=\"Description\"  rows=\"4\" class=\"form-control\" placeholder=\"\"></textarea>\r\n            </div>\r\n            <label class=\"col-md-1 col-form-label\" for=\"PaymentStatus\">Thanh toán</label>\r\n            <div class=\"col-md-3\">\r\n              <ng-select id=\"PaymentStatus\"  [items]=\"listPayment\" bindLabel=\"Value\" bindValue=\"Key\"\r\n                formControlName=\"PaymentStatus\" placeholder=\"--Thanh toán--\">\r\n              </ng-select>\r\n            </div>\r\n            <label class=\"col-md-1 col-form-label\" for=\"source\">Nguồn<span class=\"text-danger\">*</span></label>\r\n            <div class=\"col-md-3\">\r\n              <ng-select id=\"source\"  [items]=\"sources\" bindLabel=\"Value\" bindValue=\"Key\"\r\n                formControlName=\"SourceLead\" placeholder=\"--Nguồn--\">\r\n              </ng-select>\r\n              <div *ngIf=\"(f.SourceLead.touched && f.SourceLead.invalid) || (f.SourceLead.untouched && formSubmitAttempt)\" class=\"text-danger\">\r\n                <span *ngIf=\"f.SourceLead.errors?.required\">Bạn chưa chọn nguồn</span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"form-group row\">\r\n            <label class=\"col-md-1 col-form-label\" for=\"HasChild\">Có con</label>\r\n            <div class=\"col-md-3 col-form-label\">\r\n              <div class=\"form-check form-check-inline\">\r\n                <input class=\"form-check-input\" type=\"checkbox\" id=\"HasChild\" formControlName=\"HasChild\"/>\r\n              </div>\r\n            </div>\r\n\r\n            <label class=\"col-md-1 col-form-label\" for=\"HasWife\">Có vợ(chồng)</label>\r\n            <div class=\"col-md-3 col-form-label\">\r\n              <div class=\"form-check form-check-inline\">\r\n                <input class=\"form-check-input\" type=\"checkbox\" id=\"HasWife\" formControlName=\"HasWife\"/>\r\n              </div>\r\n            </div>\r\n\r\n            <label class=\"col-md-1 col-form-label\" for=\"StableIncome\">Thu nhập ổn định</label>\r\n            <div class=\"col-md-3 col-form-label\">\r\n              <div class=\"form-check form-check-inline\">\r\n                <input class=\"form-check-input\" type=\"checkbox\" id=\"StableIncome\" formControlName=\"StableIncome\"/>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"form-group row\">\r\n            <label class=\"col-md-1 col-form-label\" for=\"Job\">Công việc</label>\r\n            <div class=\"col-md-3\">\r\n              <input type=\"text\" id=\"Job\" formControlName=\"Job\" class=\"form-control\" placeholder=\"Nhập công việc\">\r\n            </div>\r\n\r\n            <label class=\"col-md-1 col-form-label\" for=\"Income\">Thu nhập</label>\r\n            <div class=\"col-md-3\">\r\n              <input type=\"number\" id=\"Income\" formControlName=\"Income\" class=\"form-control\" placeholder=\"Thu nhập cá nhân\">\r\n              <span *ngIf=\"f.Income?.errors?.pattern\" class=\"text-danger\">Bạn hãy nhập số</span>\r\n            </div>\r\n\r\n            <label class=\"col-md-1 col-form-label\" for=\"FamilyIncome\">Thu nhập GĐ </label>\r\n            <div class=\"col-md-3\">\r\n              <input type=\"number\" id=\"FamilyIncome\" formControlName=\"FamilyIncome\" class=\"form-control\" placeholder=\"Tổng thu nhập của gia đình\">\r\n              <span *ngIf=\"f.FamilyIncome?.errors?.pattern\" class=\"text-danger\">Bạn hãy nhập số</span>\r\n            </div>\r\n          </div>\r\n          <div class=\"form-group row\">\r\n            <label class=\"col-md-1 col-form-label\" for=\"CurrentCar\">Xe hiện tại</label>\r\n            <div class=\"col-md-3\">\r\n              <input type=\"text\" id=\"CurrentCar\" formControlName=\"CurrentCar\" class=\"form-control\" placeholder=\"Xe hiện tại\">\r\n            </div>\r\n\r\n            <label class=\"col-md-1 col-form-label\" for=\"IsChangeCar\">Đổi xe</label>\r\n            <div class=\"col-md-3 col-form-label\">\r\n              <div class=\"form-check form-check-inline\">\r\n                <input class=\"form-check-input\" type=\"checkbox\" id=\"IsChangeCar\" formControlName=\"IsChangeCar\" (change)=\"onItemChange()\"/>\r\n              </div>\r\n            </div>\r\n              \r\n            <label [hidden]=\"!selectChangeCar\"  class=\"col-md-1 col-form-label\" for=\"ChangeCarTime\">Thời gian đổi</label>\r\n              <div class=\"col-md-3\" [hidden]=\"!selectChangeCar\" >\r\n                <input type=\"date\" id=\"ChangeCarTime\" formControlName=\"ChangeCarTime\" class=\"form-control\" placeholder=\"Thời gian đổi\">\r\n            </div>\r\n          </div>\r\n          <div class=\"form-group row\" [hidden]=\"!selectChangeCar\" >\r\n            <label class=\"col-md-1 col-form-label\" for=\"ReasonChangeCar\">Lý do thay đổi</label>\r\n            <div class=\"col-md-5\">\r\n              <textarea id=\"ReasonChangeCar\" formControlName=\"ReasonChangeCar\" rows=\"3\" class=\"form-control\" placeholder=\"Lý do thay đổi xe\"></textarea>\r\n            </div>\r\n          </div>\r\n          <div class=\"form-group row\">\r\n            <label class=\"col-md-1 col-form-label\" for=\"GoodActionDealer\">Good Action</label>\r\n            <div class=\"col-md-3 col-form-label\">\r\n              <div class=\"form-check form-check-inline\">\r\n                <input class=\"form-check-input\" type=\"checkbox\" id=\"GoodActionDealer\" formControlName=\"GoodActionDealer\"/>\r\n              </div>\r\n            </div>\r\n\r\n            <label class=\"col-md-1 col-form-label\" for=\"LookingOtherCar\">Xem xe khác</label>\r\n            <div class=\"col-md-3 col-form-label\">\r\n              <div class=\"form-check form-check-inline\">\r\n                <input class=\"form-check-input\" type=\"checkbox\" id=\"LookingOtherCar\" formControlName=\"LookingOtherCar\"/>\r\n              </div>\r\n            </div>\r\n\r\n            <label class=\"col-md-1 col-form-label\" for=\"OtherCar\">Xe khác </label>\r\n            <div class=\"col-md-3\">\r\n              <input type=\"text\" id=\"OtherCar\" formControlName=\"OtherCar\" class=\"form-control\" placeholder=\"Xe khác\">\r\n            </div>\r\n          </div>\r\n          <div class=\"form-group row\">\r\n            <label class=\"col-md-1 col-form-label\" for=\"IsSoldCar\">Xe đã bán</label>\r\n            <div class=\"col-md-3 col-form-label\">\r\n              <div class=\"form-check form-check-inline\">\r\n                <input class=\"form-check-input\" type=\"checkbox\" id=\"IsSoldCar\" formControlName=\"IsSoldCar\"/>\r\n              </div>\r\n            </div>\r\n\r\n            <label class=\"col-md-1 col-form-label\" for=\"DealerConsider\">Dealer Consider</label>\r\n            <div class=\"col-md-3\">\r\n              <textarea id=\"DealerConsider\" formControlName=\"DealerConsider\"  rows=\"3\" class=\"form-control\" placeholder=\"\"></textarea>\r\n            </div>\r\n\r\n            <label *ngIf=\"modeInsert\" class=\"col-md-1 col-form-label\" for=\"DealerNote\">Note</label>\r\n            <div *ngIf=\"modeInsert\" class=\"col-md-3\">\r\n              <textarea id=\"DealerNote\" formControlName=\"Note\"  rows=\"3\" class=\"form-control\" placeholder=\"\"></textarea>\r\n            </div>\r\n          </div>\r\n          <div class=\"form-group row\">\r\n            <label class=\"col-md-1 col-form-label\" for=\"ExpectedDescription\">Expected Description</label>\r\n            <div class=\"col-md-11\">\r\n              <textarea id=\"ExpectedDescriptiont\" formControlName=\"ExpectedDescription\" rows=\"4\" class=\"form-control\" placeholder=\"Content..\"></textarea>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n      <div class=\"card-footer\">\r\n        <div  class=\"form-group row\">\r\n          <div *ngIf=\"modeInsert\" class=\"col-md-2 col-form-label\">\r\n            <button class=\"btn btn-block btn-success\" (click)=\"submit()\" type=\"button\"><i class=\"icon-magnifier-add\"></i> Create</button>\r\n          </div>\r\n          <div *ngIf=\"!modeInsert\" class=\"col-md-2 col-form-label\">\r\n            <button class=\"btn btn-block btn-success\" (click)=\"submit()\" type=\"button\"><i class=\"nav-icon fa fa-edit\"></i> Update</button>\r\n          </div>\r\n          <div *ngIf=\"modeInsert\" class=\"col-md-2 col-form-label\">\r\n            <button class=\"btn btn-block btn-danger\" (click)=\"reset()\" type=\"reset\"><i class=\"icon-refresh\"></i> Reset</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n","export class PermissionSave {\r\n    userName: string;\r\n    roleId: number;\r\n    cityId: number;\r\n    departmentId: number;\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { PermissionInit } from 'src/app/models/permission-init';\r\nimport { PermissionSave } from 'src/app/models/permission-save';\r\nimport { ResponseData } from 'src/app/models/ResponseData';\r\nimport { UserService } from 'src/app/services/user.service';\r\nimport { ResponseCode } from 'src/app/utils/enums/responseCode.enum';\r\n\r\n@Component({\r\n  selector: 'app-user-permission-create',\r\n  templateUrl: './user-permission-create.component.html',\r\n  styleUrls: ['./user-permission-create.component.css'],\r\n  providers: [UserService]\r\n})\r\nexport class UserPermissionCreateComponent implements OnInit {\r\n  permissionInit: PermissionInit;\r\n  permissionSave: PermissionSave;\r\n  constructor(private router: Router,\r\n              private activatedRoute: ActivatedRoute,\r\n              private userService: UserService,\r\n              private toastr: ToastrService) {\r\n                this.permissionSave = new PermissionSave();\r\n              }\r\n\r\n  ngOnInit(): void {\r\n    this.activatedRoute.queryParams.subscribe(params => {\r\n      const userName = params['username'];\r\n      this.userService.initPermission(userName).subscribe((initObj: PermissionInit) => {\r\n        if(initObj != null) {\r\n          this.permissionInit = initObj;\r\n          if(this.permissionInit.lstCity.length > 0) {\r\n            this.permissionSave.cityId = this.permissionInit.lstCity[0].id;\r\n          }\r\n          this.permissionSave.userName = initObj.userName;\r\n        }\r\n      });\r\n    });\r\n  }\r\n  save(): void {\r\n    this.permissionSave.cityId = parseInt(this.permissionSave.cityId.toString(), 10);\r\n    this.permissionSave.departmentId = parseInt(this.permissionSave.departmentId.toString(), 10);\r\n    this.permissionSave.roleId = parseInt(this.permissionSave.roleId.toString(), 10);\r\n\r\n    this.userService.save(this.permissionSave).subscribe((res: ResponseData)=> {\r\n      if(res.code === ResponseCode.Success) {\r\n        this.toastr.success(res.message);\r\n        this.router.navigateByUrl('/user/permission?username='+this.permissionSave.userName);\r\n      } else if(res.code === ResponseCode.Error) {\r\n        this.toastr.error(res.message);\r\n      } else {\r\n        this.toastr.warning(res.message);\r\n      }\r\n    });\r\n  }\r\n  changeCity(newCityId: number): void {\r\n    this.userService.getDepartmentByCityId(newCityId).subscribe((data: any) => {\r\n      this.permissionInit.lstDepartment = data.lstDepartment;\r\n    })\r\n  }\r\n\r\n}\r\n","<div class=\"animated fadeIn\">\r\n    <div class=\"row\">\r\n        <div class=\"col-md-12 col-lg-12\">\r\n            <div class=\"card\">\r\n                <div class=\"card-header\"></div>\r\n                <div class=\"card-body\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-sm-12\">\r\n                            <div class=\"form-group\">\r\n                                <label >Nhân viên</label>\r\n                                <select readonly=\"readonly\" class=\"form-control\" [(ngModel)]=\"permissionSave.userName\" >\r\n                                    <option value=\"{{permissionInit.userName}}\" >{{permissionInit.userName}}</option>\r\n                                </select>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-sm-12\">\r\n                            <div class=\"form-group\">\r\n                                <label>Quyền </label>\r\n                                <select class=\"form-control\" [(ngModel)]=\"permissionSave.roleId\">\r\n                                    <option value=\"1001\">Quản lý</option>\r\n                                </select>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-sm-12\">\r\n                            <div class=\"form-group\">\r\n                                <label>Chi nhánh </label>\r\n                                <select class=\"form-control\" (ngModelChange)=\"changeCity($event)\"  [(ngModel)]=\"permissionSave.cityId\">\r\n                                    <option *ngFor=\"let item of permissionInit.lstCity\" value=\"{{item.id}}\" >{{item.cityName}}</option>\r\n                                </select>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-sm-12\">\r\n                            <div class=\"form-group\">\r\n                                <label>Phòng ban </label>\r\n                                <select class=\"form-control\" [(ngModel)]=\"permissionSave.departmentId\">\r\n                                    <option *ngFor=\"let item of permissionInit.lstDepartment\" value=\"{{item.id}}\" >{{item.name}}</option>\r\n                                </select>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-sm-12\">\r\n                            <button type=\"button\" (click)=\"save()\" class=\"btn btn-block btn-primary\">Lưu</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule, {\r\n  //useJit: true,\r\n  preserveWhitespaces: true\r\n})\r\n  .catch(err => console.log(err));\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"]}